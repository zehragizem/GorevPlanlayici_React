{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Badge, Calendar, message, Space } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = ['pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime'];\nconst TaskCalendar = ({\n  apiUrl,\n  userData\n}) => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      console.log('Tüm veriler:', allData); // Log all data to console\n\n      // Filter tasks based on UserID and transform tasks into a usable format\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasksWithDates = filteredUsers.map(user => ({\n        task: user.Task,\n        Date: user.Date\n      }));\n      setTodos(tasksWithDates);\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      // Handle error accordingly\n    }\n  };\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n  useEffect(() => {\n    console.log('Filtrelenmiş görevler:', todos);\n  }, [todos]);\n  const getListData = value => {\n    const date = value.format('YYYY-MM-DD');\n    return todos.filter(todo => todo.date === date);\n  };\n  const dateCellRender = value => {\n    const listData = getListData(value);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"events\",\n      children: listData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          direction: \"vertical\",\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            color: colors[index % colors.length],\n            text: item.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Calendar, {\n    dateCellRender: dateCellRender\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCalendar, \"JPZTns5sUK6f8sNf0ff2EvpSbn0=\");\n_c = TaskCalendar;\nexport default TaskCalendar;\nvar _c;\n$RefreshReg$(_c, \"TaskCalendar\");","map":{"version":3,"names":["React","useEffect","useState","Badge","Calendar","message","Space","axios","jsxDEV","_jsxDEV","colors","TaskCalendar","apiUrl","userData","_s","todos","setTodos","fetchDataAndFilterTasks","response","get","allData","data","console","log","filteredUsers","filter","item","UserID","tasksWithDates","map","user","task","Task","Date","error","getListData","value","date","format","todo","dateCellRender","listData","className","children","index","direction","color","length","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/calendar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Badge, Calendar, message, Space } from 'antd';\nimport axios from 'axios';\n\n\nconst colors = [\n  'pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime',\n];\n\nconst TaskCalendar = ({ apiUrl, userData }) => {\n  const [todos, setTodos] = useState([]);\n\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n\n      console.log('Tüm veriler:', allData); // Log all data to console\n\n      // Filter tasks based on UserID and transform tasks into a usable format\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasksWithDates = filteredUsers.map(user => ({\n        task: user.Task,\n        Date: user.Date \n      }));\n\n      setTodos(tasksWithDates);\n\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      // Handle error accordingly\n    }\n  };\n\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n\n  useEffect(() => {\n    console.log('Filtrelenmiş görevler:', todos);\n  }, [todos]);\n\n\n  const getListData = (value) => {\n    const date = value.format('YYYY-MM-DD');\n    return todos.filter(todo => todo.date === date);\n  };\n\n  const dateCellRender = (value) => {\n    const listData = getListData(value);\n    return (\n      <ul className=\"events\">\n        {listData.map((item, index) => (\n          <li key={index}>\n            <Space direction=\"vertical\">\n              <Badge color={colors[index % colors.length]} text={item.task} />\n            </Space>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <Calendar dateCellRender={dateCellRender} />\n  );\n};\n\nexport default TaskCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}