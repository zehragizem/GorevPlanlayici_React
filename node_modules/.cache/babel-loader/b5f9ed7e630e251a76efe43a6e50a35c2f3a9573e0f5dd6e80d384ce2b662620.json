{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from 'react';\nimport { message } from 'antd';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nconst LoginData = () => {\n  _s();\n  const navigate = useNavigate();\n  const formRef = useRef(null);\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem11/google_sheets/ICsbCoIOoLbnWrHj?tabId=login';\n  const handleLogin = async values => {\n    const {\n      Email,\n      myPassword\n    } = values;\n\n    // Check if the user exists in the fetched data\n    const user = data.find(item => item.Email === Email && item.Password === myPassword);\n    if (user) {\n      message.success('Successful login'); // Successful login message\n      setIsLoading(true); // Set loading state to true\n      setUserData(user);\n      // Simulated redirection (after 1.1 seconds)\n      setTimeout(() => {\n        setIsLoading(false); // Set loading state to false\n\n        navigate('/home'); // Redirect to /home page\n      }, 1100);\n      setTimeout(() => {\n        message.destroy(); // Destroy current message\n      }, 500);\n    } else {\n      message.error('Incorrect email or password'); // Incorrect email or password message\n    }\n  };\n  const getData = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      setData(response.data.data);\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n    }\n  };\n  useEffect(() => {\n    getData(); // Fetch data\n  }, []);\n  return {\n    formRef,\n    handleLogin,\n    isLoading\n  }; // Return loggedInUser as part of the object\n};\n_s(LoginData, \"gNlm0siO2FHa60JuHiCWyeX+IyQ=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginData;\nexport default LoginData;\nvar _c;\n$RefreshReg$(_c, \"LoginData\");","map":{"version":3,"names":["useRef","useState","useEffect","message","axios","useNavigate","LoginData","_s","navigate","formRef","data","setData","isLoading","setIsLoading","apiUrl","handleLogin","values","Email","myPassword","user","find","item","Password","success","setUserData","setTimeout","destroy","error","getData","response","get","console","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/services/logindata.js"],"sourcesContent":["import { useRef, useState, useEffect } from 'react';\nimport { message } from 'antd';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginData = () => {\n    const navigate = useNavigate();\n    const formRef = useRef(null);\n    const [data, setData] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const apiUrl = 'https://v1.nocodeapi.com/gizem11/google_sheets/ICsbCoIOoLbnWrHj?tabId=login';\n\n    const handleLogin = async (values) => {\n        const { Email, myPassword } = values;\n\n        // Check if the user exists in the fetched data\n        const user = data.find(item => item.Email === Email && item.Password === myPassword);\n\n        if (user) {\n            message.success('Successful login'); // Successful login message\n            setIsLoading(true); // Set loading state to true\n            setUserData(user)\n            // Simulated redirection (after 1.1 seconds)\n            setTimeout(() => {\n                setIsLoading(false); // Set loading state to false\n           \n                navigate('/home'); // Redirect to /home page\n            }, 1100);\n            setTimeout(() => {\n                message.destroy(); // Destroy current message\n            }, 500);\n        } else {\n            message.error('Incorrect email or password'); // Incorrect email or password message\n        }\n    };\n\n    const getData = async () => {\n        try {\n            const response = await axios.get(apiUrl);\n            setData(response.data.data);\n        } catch (error) {\n            console.error('Failed to fetch data', error);\n        }\n    };\n\n    useEffect(() => {\n        getData(); // Fetch data\n    }, []);\n\n    return { formRef, handleLogin, isLoading}; // Return loggedInUser as part of the object\n\n};\n\nexport default LoginData;\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,MAAM;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC9B,MAAMI,OAAO,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMa,MAAM,GAAG,6EAA6E;EAE5F,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;IAClC,MAAM;MAAEC,KAAK;MAAEC;IAAW,CAAC,GAAGF,MAAM;;IAEpC;IACA,MAAMG,IAAI,GAAGT,IAAI,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,KAAK,KAAKA,KAAK,IAAII,IAAI,CAACC,QAAQ,KAAKJ,UAAU,CAAC;IAEpF,IAAIC,IAAI,EAAE;MACNhB,OAAO,CAACoB,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;MACrCV,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACpBW,WAAW,CAACL,IAAI,CAAC;MACjB;MACAM,UAAU,CAAC,MAAM;QACbZ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;;QAErBL,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;MACRiB,UAAU,CAAC,MAAM;QACbtB,OAAO,CAACuB,OAAO,CAAC,CAAC,CAAC,CAAC;MACvB,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,MAAM;MACHvB,OAAO,CAACwB,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAClD;EACJ,CAAC;EAED,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAChB,MAAM,CAAC;MACxCH,OAAO,CAACkB,QAAQ,CAACnB,IAAI,CAACA,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACZI,OAAO,CAACJ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACZ0B,OAAO,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEnB,OAAO;IAAEM,WAAW;IAAEH;EAAS,CAAC,CAAC,CAAC;AAE/C,CAAC;AAACL,EAAA,CA9CID,SAAS;EAAA,QACMD,WAAW;AAAA;AAAA2B,EAAA,GAD1B1B,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}