{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/taskform.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Form, Input, Button, DatePicker, message, ConfigProvider } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  userData,\n  addTask,\n  apiUrl\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [subtask, setSubTask] = useState('');\n  const [date, setDate] = useState(null);\n  const formRef = useRef();\n  const handleSubmit = async () => {\n    if (value) {\n      try {\n        const taskData = [[userData.Email, userData.Password, userData.User, userData.Telephone, userData.Address, userData.UserID, value, subtask, date ? date.format('YYYY-MM-DD') : null]];\n\n        // Post new task data\n        await axios.post(apiUrl, taskData);\n\n        // Reset form fields\n        formRef.current.resetFields();\n        message.success('Görev başarıyla eklendi.');\n        // Add task to the state or perform any other action as needed\n        addTask(value);\n      } catch (error) {\n        message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n        console.error('Görev eklenirken hata oluştu:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"mp8oyvG4u21524IZtOzcsnOFWGA=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useRef","Form","Input","Button","DatePicker","message","ConfigProvider","FileAddOutlined","axios","jsxDEV","_jsxDEV","TaskForm","userData","addTask","apiUrl","_s","value","setValue","subtask","setSubTask","date","setDate","formRef","handleSubmit","taskData","Email","Password","User","Telephone","Address","UserID","format","post","current","resetFields","success","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/taskform.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Form, Input, Button, DatePicker, message, ConfigProvider } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\n\nconst TaskForm = ({userData,addTask,apiUrl}) => {\n  const [value, setValue] = useState('');\n  const [subtask, setSubTask] = useState('');\n  const [date, setDate] = useState(null);\n  const formRef = useRef();\n\n  const handleSubmit = async () => {\n    if (value) {\n      try {\n        const taskData = [\n          [\n            userData.Email,\n            userData.Password,\n            userData.User,\n            userData.Telephone,\n            userData.Address,\n            userData.UserID,\n            value,\n            subtask,\n            date ? date.format('YYYY-MM-DD') : null\n          ]\n        ];\n\n        // Post new task data\n        await axios.post(apiUrl, taskData);\n\n        // Reset form fields\n        formRef.current.resetFields();\n        message.success('Görev başarıyla eklendi.');\n        // Add task to the state or perform any other action as needed\n        addTask(value);\n\n      } catch (error) {\n        message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n        console.error('Görev eklenirken hata oluştu:', error);\n      }\n    }\n  };\n\n  return (\n    <ConfigProvider>\n        \n    </ConfigProvider>\n  );\n};\n\nexport default TaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,cAAc,QAAQ,MAAM;AAC/E,SAASC,eAAe,QAAQ,mBAAmB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1B,MAAMC,QAAQ,GAAGA,CAAC;EAACC,QAAQ;EAACC,OAAO;EAACC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMuB,OAAO,GAAGtB,MAAM,CAAC,CAAC;EAExB,MAAMuB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIP,KAAK,EAAE;MACT,IAAI;QACF,MAAMQ,QAAQ,GAAG,CACf,CACEZ,QAAQ,CAACa,KAAK,EACdb,QAAQ,CAACc,QAAQ,EACjBd,QAAQ,CAACe,IAAI,EACbf,QAAQ,CAACgB,SAAS,EAClBhB,QAAQ,CAACiB,OAAO,EAChBjB,QAAQ,CAACkB,MAAM,EACfd,KAAK,EACLE,OAAO,EACPE,IAAI,GAAGA,IAAI,CAACW,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,CACxC,CACF;;QAED;QACA,MAAMvB,KAAK,CAACwB,IAAI,CAAClB,MAAM,EAAEU,QAAQ,CAAC;;QAElC;QACAF,OAAO,CAACW,OAAO,CAACC,WAAW,CAAC,CAAC;QAC7B7B,OAAO,CAAC8B,OAAO,CAAC,0BAA0B,CAAC;QAC3C;QACAtB,OAAO,CAACG,KAAK,CAAC;MAEhB,CAAC,CAAC,OAAOoB,KAAK,EAAE;QACd/B,OAAO,CAAC+B,KAAK,CAAC,0DAA0D,CAAC;QACzEC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF;EACF,CAAC;EAED,oBACE1B,OAAA,CAACJ,cAAc;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAErB,CAAC;AAAC1B,EAAA,CA5CIJ,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}