{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/taskEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\nimport TaskList from './tasklist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  userData\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [data, setData] = useState([]); // State to hold all tasks\n  const formRef = useRef(null);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login';\n\n  // Function to fetch and filter tasks\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n      setData(tasks); // Set initial data\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n      message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n    }\n  };\n\n  // Fetch initial data on component mount\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n\n  // Handle input change\n  const handleChange = e => {\n    setName(e.target.value);\n  };\n\n  // Handle form submission\n  const handleSubmit = async values => {\n    try {\n      const taskData = [[userData.Email, userData.Password, userData.User, name, userData.UserID]];\n\n      // Post new task data\n      await axios.post(apiUrl, taskData);\n\n      // Clear form field and notify success\n      formRef.current.resetFields();\n      setName('');\n      message.success('Görev başarıyla eklendi.');\n\n      // Update state to reflect new task\n      setData(prevData => [...prevData, name]);\n    } catch (error) {\n      message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n      console.error('Görev eklenirken hata oluştu:', error);\n    }\n  };\n  const handleDelete = async task => {\n    console.log('Sil:', task);\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n\n      // Silinecek task'in kimliğini (row_id) al\n      const deletedData = allData.find(item => item.Task === task);\n      if (!deletedData) {\n        throw new Error('Görev bulunamadı.'); // Eğer görev bulunamazsa hata fırlat\n      }\n      const row_id = deletedData.row_id; // Görevin kimliği (row_id)\n\n      // Veritabanından silme işlemi için DELETE isteği gönder\n      await axios.delete(`https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login&row_id=${row_id}`);\n\n      // Başarılı bir şekilde silindiğinde bildirim göster\n      message.success('Görev başarıyla silindi.');\n      const resp = await axios.get(apiUrl);\n      const all = response.data.data;\n    } catch (error) {\n      console.error('Görev silinirken hata oluştu:', error);\n      message.error('Görev silinirken bir hata oluştu. Lütfen tekrar deneyin.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onFinish: handleSubmit,\n      ref: formRef,\n      layout: \"inline\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"taskInput\",\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"g\\xF6rev\",\n          placeholder: \"G\\xF6rev Ekleyin\",\n          value: name,\n          onChange: handleChange,\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          size: \"large\"\n          // Disable button if input is empty or only whitespace\n          ,\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"Qug0AUnRq9oR75F+rLluXotG2hI=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Form","Input","Button","message","axios","TaskList","jsxDEV","_jsxDEV","TaskForm","userData","_s","name","setName","data","setData","formRef","apiUrl","fetchDataAndFilterTasks","response","get","allData","filteredUsers","filter","item","UserID","tasks","flatMap","user","Task","split","map","task","trim","error","console","handleChange","e","target","value","handleSubmit","values","taskData","Email","Password","User","post","current","resetFields","success","prevData","handleDelete","log","deletedData","find","Error","row_id","delete","resp","all","children","onFinish","ref","layout","Item","style","flex","placeholder","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","htmlType","type","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/taskEdit.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\nimport TaskList from './tasklist';\n\nconst TaskForm = ({ userData }) => {\n    const [name, setName] = useState('');\n    const [data, setData] = useState([]); // State to hold all tasks\n    const formRef = useRef(null);\n    const apiUrl = 'https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login';\n\n    // Function to fetch and filter tasks\n    const fetchDataAndFilterTasks = async () => {\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n\n            const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n            const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n            setData(tasks); // Set initial data\n\n        } catch (error) {\n            console.error('Failed to fetch data', error);\n            message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n        }\n    };\n\n    // Fetch initial data on component mount\n    useEffect(() => {\n        fetchDataAndFilterTasks();\n    }, []);\n\n    // Handle input change\n    const handleChange = (e) => {\n        setName(e.target.value);\n    };\n\n    // Handle form submission\n    const handleSubmit = async (values) => {\n        try {\n            const taskData = [\n                [\n                    userData.Email,\n                    userData.Password,\n                    userData.User,\n                    name,\n                    userData.UserID\n                ]\n            ];\n\n            // Post new task data\n            await axios.post(apiUrl, taskData);\n\n            // Clear form field and notify success\n            formRef.current.resetFields();\n            setName('');\n            message.success('Görev başarıyla eklendi.');\n\n            // Update state to reflect new task\n            setData(prevData => [...prevData, name]);\n\n        } catch (error) {\n            message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n            console.error('Görev eklenirken hata oluştu:', error);\n        }\n    };\n    const handleDelete = async (task) => {\n        console.log('Sil:', task);\n\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n    \n            // Silinecek task'in kimliğini (row_id) al\n            const deletedData = allData.find(item => item.Task === task);\n            if (!deletedData) {\n                throw new Error('Görev bulunamadı.'); // Eğer görev bulunamazsa hata fırlat\n            }\n    \n            const row_id = deletedData.row_id; // Görevin kimliği (row_id)\n    \n            // Veritabanından silme işlemi için DELETE isteği gönder\n            await axios.delete(`https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login&row_id=${row_id}`);\n    \n            // Başarılı bir şekilde silindiğinde bildirim göster\n            message.success('Görev başarıyla silindi.');\n            const resp = await axios.get(apiUrl);\n            const all = response.data.data;\n       \n        } catch (error) {\n            console.error('Görev silinirken hata oluştu:', error);\n            message.error('Görev silinirken bir hata oluştu. Lütfen tekrar deneyin.');\n        }\n    };\n    return (\n        <div>\n            <Form onFinish={handleSubmit} ref={formRef} layout=\"inline\">\n                <Form.Item name=\"taskInput\" style={{ flex: 1 }}>\n                    <Input\n                        name=\"görev\"\n                        placeholder=\"Görev Ekleyin\"\n                        value={name}\n                        onChange={handleChange}\n                        size=\"large\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                        size=\"large\"\n                        // Disable button if input is empty or only whitespace\n                    >\n                        Ekle\n                    </Button>\n                </Form.Item>\n            </Form>\n            <TaskList data={data}/>\n        </div>\n    );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}