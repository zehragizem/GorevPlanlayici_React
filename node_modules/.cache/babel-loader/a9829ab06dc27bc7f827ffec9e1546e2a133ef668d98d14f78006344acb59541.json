{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/task.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  userData\n}) => {\n  _s();\n  const location = useLocation();\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  useEffect(() => {\n    // URL'den UserID al\n    const searchParams = new URLSearchParams(location.search);\n    const userIdParam = searchParams.get('UserID');\n    if (userIdParam && userIdParam === userData.UserID.toString()) {\n      // UserID parametresi var ve eşleşiyorsa görevleri filtrele\n      const tasks = userData.Task.split(',');\n      setFilteredTasks(tasks.map(task => task.trim()));\n    } else {\n      // UserID eşleşmiyorsa veya parametre yoksa tüm görevleri göster\n      const tasks = userData.Task.split(',');\n      setFilteredTasks(tasks.map(task => task.trim()));\n    }\n  }, [location, userData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"G\\xF6revleriniz:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), filteredTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginBottom: '10px'\n        },\n        block: true,\n        children: task\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Task, \"o/eJHiyrKPqmmSBScSJovwcBrLI=\", false, function () {\n  return [useLocation];\n});\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Task","userData","_s","location","filteredTasks","setFilteredTasks","searchParams","URLSearchParams","search","userIdParam","get","UserID","toString","tasks","split","map","task","trim","children","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","index","marginBottom","block","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'antd';\n\nconst Task = ({ userData }) => {\n  const location = useLocation();\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  useEffect(() => {\n    // URL'den UserID al\n    const searchParams = new URLSearchParams(location.search);\n    const userIdParam = searchParams.get('UserID');\n\n    if (userIdParam && userIdParam === userData.UserID.toString()) {\n      // UserID parametresi var ve eşleşiyorsa görevleri filtrele\n      const tasks = userData.Task.split(',');\n      setFilteredTasks(tasks.map(task => task.trim()));\n    } else {\n      // UserID eşleşmiyorsa veya parametre yoksa tüm görevleri göster\n      const tasks = userData.Task.split(',');\n      setFilteredTasks(tasks.map(task => task.trim()));\n    }\n  }, [location, userData]);\n\n  return (\n    <>\n      <div style={{ padding: '20px' }}>\n        <h2>Görevleriniz:</h2>\n        {filteredTasks.map((task, index) => (\n          <Button key={index} style={{ marginBottom: '10px'}} block>\n            {task}\n          </Button>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Task;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,YAAY,GAAG,IAAIC,eAAe,CAACJ,QAAQ,CAACK,MAAM,CAAC;IACzD,MAAMC,WAAW,GAAGH,YAAY,CAACI,GAAG,CAAC,QAAQ,CAAC;IAE9C,IAAID,WAAW,IAAIA,WAAW,KAAKR,QAAQ,CAACU,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE;MAC7D;MACA,MAAMC,KAAK,GAAGZ,QAAQ,CAACD,IAAI,CAACc,KAAK,CAAC,GAAG,CAAC;MACtCT,gBAAgB,CAACQ,KAAK,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,MAAM;MACL;MACA,MAAMJ,KAAK,GAAGZ,QAAQ,CAACD,IAAI,CAACc,KAAK,CAAC,GAAG,CAAC;MACtCT,gBAAgB,CAACQ,KAAK,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClD;EACF,CAAC,EAAE,CAACd,QAAQ,EAAEF,QAAQ,CAAC,CAAC;EAExB,oBACEJ,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACErB,OAAA;MAAKsB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAF,QAAA,gBAC9BrB,OAAA;QAAAqB,QAAA,EAAI;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrBpB,aAAa,CAACW,GAAG,CAAC,CAACC,IAAI,EAAES,KAAK,kBAC7B5B,OAAA,CAACF,MAAM;QAAawB,KAAK,EAAE;UAAEO,YAAY,EAAE;QAAM,CAAE;QAACC,KAAK;QAAAT,QAAA,EACtDF;MAAI,GADMS,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACtB,EAAA,CAhCIF,IAAI;EAAA,QACSN,WAAW;AAAA;AAAAkC,EAAA,GADxB5B,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}