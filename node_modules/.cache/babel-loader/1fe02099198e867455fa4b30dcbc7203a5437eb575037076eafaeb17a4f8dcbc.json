{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/tasklist.js\",\n  _s = $RefreshSig$();\nimport { Button, Popconfirm, message, ConfigProvider, TimePicker } from \"antd\";\nimport { FileExcelOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  task,\n  deleteTask,\n  userData,\n  apiUrl\n}) => {\n  _s();\n  const [subTask, setSubTask] = useState([]);\n  const [showSubTask, setShowSubTask] = useState(false);\n  const [selectedSubTask, setSelectedSubTask] = useState(null);\n  const [timeRanges, setTimeRanges] = useState({});\n  const [taskTimes, setTaskTimes] = useState([]);\n  const handleButtonClick = index => {\n    setSelectedSubTask(index);\n  };\n  const handleTimeChange = (index, time) => {\n    setTimeRanges(prevRanges => ({\n      ...prevRanges,\n      [index]: time\n    }));\n  };\n  const handleAddTime = index => {\n    if (timeRanges[index]) {\n      setTaskTimes(prevTimes => [...prevTimes, {\n        task: subTask[index],\n        time: timeRanges[index]\n      }]);\n    }\n  };\n  const handleDelete = async task => {\n    console.log('Sil:', task);\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      // Silinecek task'in kimliğini (row_id) al\n      const deletedData = allData.find(item => item.Task === task);\n      if (!deletedData) {\n        throw new Error('Görev bulunamadı.'); // Eğer görev bulunamazsa hata fırlat\n      }\n      const row_id = deletedData.row_id; // Görevin kimliği (row_id)\n\n      // Veritabanından silme işlemi için DELETE isteği gönder\n      await axios.delete(`${apiUrl}&row_id=${row_id}`);\n\n      // Başarılı bir şekilde silindiğinde bildirim göster\n      message.success('Görev başarıyla silindi.');\n      deleteTask(deletedData.Task);\n    } catch (error) {\n      console.error('Görev silinirken hata oluştu:', error);\n      message.error('Görev silinirken bir hata oluştu. Lütfen tekrar deneyin.');\n    }\n  };\n  const handleItemClick = async task => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID && item.Task === task);\n      const subtasks = filteredUsers.flatMap(user => user.SubTask.split(',').map(SubTask => SubTask.trim()));\n      setSubTask(subtasks);\n      setShowSubTask(true);\n    } catch (error) {\n      console.error('Alt görevler alınırken hata oluştu:', error);\n      message.error('Alt görev bulunamadı!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    theme: {\n      token: {\n        colorPrimary: '#d11ba7',\n        colorPrimaryHover: '#5b10b5',\n        colorIcon: 'black'\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            color: \"black\",\n            marginRight: '10px',\n            width: '637px'\n          },\n          onClick: () => handleItemClick(task),\n          children: [task, \" \", showSubTask ? /*#__PURE__*/_jsxDEV(UpOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 47\n          }, this) : /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Bu g\\xF6revi silmek istedi\\u011Finizden emin misiniz?\",\n          onConfirm: () => handleDelete(task),\n          okText: \"Evet\",\n          cancelText: \"Hay\\u0131r\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(FileExcelOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 35\n            }, this),\n            type: \"primary\",\n            style: {\n              marginBlockEnd: \"10px\"\n            },\n            children: \"Sil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showSubTask && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '20px'\n          },\n          children: subTask.map((subtask, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleButtonClick(index),\n              children: subtask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), selectedSubTask === index && /*#__PURE__*/_jsxDEV(TimePicker.RangePicker, {\n              style: {\n                marginTop: '10px',\n                marginLeft: '10px'\n              },\n              onChange: time => handleTimeChange(index, time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"aJyH2ObjHtgmrfwH1ennvQ60rYo=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["Button","Popconfirm","message","ConfigProvider","TimePicker","FileExcelOutlined","DownOutlined","UpOutlined","React","useState","axios","jsxDEV","_jsxDEV","TaskList","task","deleteTask","userData","apiUrl","_s","subTask","setSubTask","showSubTask","setShowSubTask","selectedSubTask","setSelectedSubTask","timeRanges","setTimeRanges","taskTimes","setTaskTimes","handleButtonClick","index","handleTimeChange","time","prevRanges","handleAddTime","prevTimes","handleDelete","console","log","response","get","allData","data","deletedData","find","item","Task","Error","row_id","delete","success","error","handleItemClick","filteredUsers","filter","UserID","subtasks","flatMap","user","SubTask","split","map","trim","theme","token","colorPrimary","colorPrimaryHover","colorIcon","children","style","display","flexDirection","color","marginRight","width","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","onConfirm","okText","cancelText","icon","type","marginBlockEnd","marginLeft","subtask","marginBottom","RangePicker","marginTop","onChange","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/tasklist.js"],"sourcesContent":["import { Button, Popconfirm, message, ConfigProvider, TimePicker } from \"antd\";\nimport { FileExcelOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport React, { useState } from \"react\";\nimport axios from 'axios';\n\nconst TaskList = ({ task, deleteTask, userData, apiUrl }) => {\n    const [subTask, setSubTask] = useState([]);\n    const [showSubTask, setShowSubTask] = useState(false);\n    const [selectedSubTask, setSelectedSubTask] = useState(null);\n    const [timeRanges, setTimeRanges] = useState({});\n    const [taskTimes, setTaskTimes] = useState([]);\n\n    const handleButtonClick = (index) => {\n        setSelectedSubTask(index);\n    };\n\n    const handleTimeChange = (index, time) => {\n        setTimeRanges(prevRanges => ({\n            ...prevRanges,\n            [index]: time\n        }));\n    };\n\n    const handleAddTime = (index) => {\n        if (timeRanges[index]) {\n            setTaskTimes(prevTimes => [\n                ...prevTimes,\n                {\n                    task: subTask[index],\n                    time: timeRanges[index]\n                }\n            ]);\n        }\n    };\n    const handleDelete = async (task) => {\n        console.log('Sil:', task);\n\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n            // Silinecek task'in kimliğini (row_id) al\n            const deletedData = allData.find(item => item.Task === task);\n            if (!deletedData) {\n                throw new Error('Görev bulunamadı.'); // Eğer görev bulunamazsa hata fırlat\n            }\n\n            const row_id = deletedData.row_id; // Görevin kimliği (row_id)\n\n            // Veritabanından silme işlemi için DELETE isteği gönder\n            await axios.delete(`${apiUrl}&row_id=${row_id}`);\n\n            // Başarılı bir şekilde silindiğinde bildirim göster\n            message.success('Görev başarıyla silindi.');\n            deleteTask(deletedData.Task);\n\n        } catch (error) {\n            console.error('Görev silinirken hata oluştu:', error);\n            message.error('Görev silinirken bir hata oluştu. Lütfen tekrar deneyin.');\n        }\n    };\n\n    const handleItemClick = async (task) => {\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n            const filteredUsers = allData.filter(item => item.UserID === userData.UserID && item.Task === task);\n            const subtasks = filteredUsers.flatMap(user => user.SubTask.split(',').map(SubTask => SubTask.trim()));\n            setSubTask(subtasks);\n            setShowSubTask(true);\n        } catch (error) {\n            console.error('Alt görevler alınırken hata oluştu:', error);\n            message.error('Alt görev bulunamadı!');\n        }\n    };\n\n    return (\n\n        <ConfigProvider\n            theme={{\n                token: {\n                    colorPrimary: '#d11ba7',\n                    colorPrimaryHover: '#5b10b5',\n                    colorIcon: 'black'\n                }\n            }}\n\n\n        >\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <div style={{ display: \"flex\" }}>\n                    <Button\n                        style={{ color: \"black\", marginRight: '10px', width: '637px' }}\n                        onClick={() => handleItemClick(task)}\n                    >\n                        {task} {showSubTask ? <UpOutlined /> : <DownOutlined />}\n                    </Button>\n\n                    <Popconfirm\n                        title=\"Bu görevi silmek istediğinizden emin misiniz?\"\n                        onConfirm={() => handleDelete(task)}\n                        okText=\"Evet\"\n                        cancelText=\"Hayır\"\n                    >\n                        <Button\n                            icon={<FileExcelOutlined />}\n                            type=\"primary\"\n                            style={{ marginBlockEnd: \"10px\" }}\n                        >\n                            Sil\n                        </Button>\n                    </Popconfirm>\n                </div>\n\n                <div>\n            {showSubTask && (\n                <div style={{ marginLeft: '20px' }}>\n                    {subTask.map((subtask, index) => (\n                        <div key={index} style={{ marginBottom: '10px' }}>\n                            <Button onClick={() => handleButtonClick(index)}>{subtask}</Button>\n                            {selectedSubTask === index && (\n                                <TimePicker.RangePicker\n                                    style={{ marginTop: '10px', marginLeft: '10px' }}\n                                    onChange={(time) => handleTimeChange(index, time)}\n                                />\n                                \n                            )}\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n            </div>\n\n\n\n        </ConfigProvider>\n\n    );\n}\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}