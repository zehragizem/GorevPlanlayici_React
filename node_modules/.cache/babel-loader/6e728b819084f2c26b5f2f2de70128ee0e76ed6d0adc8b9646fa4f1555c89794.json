{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Badge, Calendar, message, Space } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = ['pink', 'purple', 'blue', 'red', 'yellow', 'orange', 'cyan', 'green', 'geekblue', 'magenta', 'volcano', 'gold', 'lime'];\nconst TaskCalendar = ({\n  apiUrl,\n  userData\n}) => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      console.log('Tüm veriler:', allData); // Log all data to console\n\n      // Filter tasks based on UserID and transform tasks into a usable format\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasksWithDates = filteredUsers.map(user => ({\n        task: user.Task,\n        startDate: user.StartDate,\n        endDate: user.EndDate\n      }));\n      setTodos(tasksWithDates);\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      message.error(`Veriler alınamadı. Lütfen daha sonra tekrar deneyin. Hata: ${error.message}`);\n    }\n  };\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n  useEffect(() => {\n    console.log('Filtrelenmiş görevler:', todos);\n  }, [todos]);\n\n  // Function to group tasks by date range\n  const groupTasksByDate = () => {\n    const groupedTasks = {};\n    todos.forEach(task => {\n      const startDate = moment(task.startDate);\n      const endDate = moment(task.endDate);\n      for (let date = startDate; date.isSameOrBefore(endDate, 'day'); date.add(1, 'day')) {\n        const formattedDate = date.format('YYYY-MM-DD');\n        if (!groupedTasks[formattedDate]) {\n          groupedTasks[formattedDate] = [];\n        }\n        groupedTasks[formattedDate].push(task);\n      }\n    });\n    return groupedTasks;\n  };\n\n  // Render tasks on calendar\n  const renderTasksOnCalendar = value => {\n    const groupedTasks = groupTasksByDate();\n    const date = value.format('YYYY-MM-DD');\n    const tasksForDate = groupedTasks[date] || [];\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksForDate.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          color: colors[index % colors.length],\n          text: task.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      dateCellRender: renderTasksOnCalendar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCalendar, \"JPZTns5sUK6f8sNf0ff2EvpSbn0=\");\n_c = TaskCalendar;\nexport default TaskCalendar;\nvar _c;\n$RefreshReg$(_c, \"TaskCalendar\");","map":{"version":3,"names":["React","useEffect","useState","Badge","Calendar","message","Space","axios","moment","jsxDEV","_jsxDEV","colors","TaskCalendar","apiUrl","userData","_s","todos","setTodos","fetchDataAndFilterTasks","response","get","allData","data","console","log","filteredUsers","filter","item","UserID","tasksWithDates","map","user","task","Task","startDate","StartDate","endDate","EndDate","error","groupTasksByDate","groupedTasks","forEach","date","isSameOrBefore","add","formattedDate","format","push","renderTasksOnCalendar","value","tasksForDate","children","index","color","length","text","fileName","_jsxFileName","lineNumber","columnNumber","dateCellRender","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/calendar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Badge, Calendar, message, Space } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst colors = [\n  'pink', 'purple', 'blue', 'red', 'yellow', 'orange', 'cyan', 'green', 'geekblue', 'magenta', 'volcano', 'gold', 'lime',\n];\n\nconst TaskCalendar = ({ apiUrl, userData }) => {\n  const [todos, setTodos] = useState([]);\n\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n\n      console.log('Tüm veriler:', allData); // Log all data to console\n\n      // Filter tasks based on UserID and transform tasks into a usable format\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasksWithDates = filteredUsers.map(user => ({\n        task: user.Task,\n        startDate: user.StartDate,\n        endDate: user.EndDate,\n      }));\n\n      setTodos(tasksWithDates);\n\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      message.error(`Veriler alınamadı. Lütfen daha sonra tekrar deneyin. Hata: ${error.message}`);\n    }\n  };\n\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n\n  useEffect(() => {\n    console.log('Filtrelenmiş görevler:', todos);\n  }, [todos]);\n\n  // Function to group tasks by date range\n  const groupTasksByDate = () => {\n    const groupedTasks = {};\n    todos.forEach(task => {\n      const startDate = moment(task.startDate);\n      const endDate = moment(task.endDate);\n\n      for (let date = startDate; date.isSameOrBefore(endDate, 'day'); date.add(1, 'day')) {\n        const formattedDate = date.format('YYYY-MM-DD');\n        if (!groupedTasks[formattedDate]) {\n          groupedTasks[formattedDate] = [];\n        }\n        groupedTasks[formattedDate].push(task);\n      }\n    });\n    return groupedTasks;\n  };\n\n  // Render tasks on calendar\n  const renderTasksOnCalendar = value => {\n    const groupedTasks = groupTasksByDate();\n\n    const date = value.format('YYYY-MM-DD');\n    const tasksForDate = groupedTasks[date] || [];\n\n    return (\n      <ul>\n        {tasksForDate.map((task, index) => (\n          <li key={index}>\n            <Badge color={colors[index % colors.length]} text={task.task} />\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div>\n      <Calendar\n        dateCellRender={renderTasksOnCalendar}\n      />\n    </div>\n  );\n};\n\nexport default TaskCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}