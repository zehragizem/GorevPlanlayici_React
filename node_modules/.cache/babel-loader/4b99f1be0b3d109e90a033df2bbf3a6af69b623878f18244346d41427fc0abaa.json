{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/taskEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport Task from '../components/task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  userData\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const apiUrl = 'https://v1.nocodeapi.com/gizem12345/google_sheets/JheosOqLeKiZJKFm?tabId=login';\n  const handleChange = e => {\n    setName(e.target.value);\n  };\n  const handleSubmit = async () => {\n    const data = [[userData.Email, userData.Password, userData.User, name, userData.UserID]];\n    try {\n      await axios.post(apiUrl, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Görev başarıyla eklendi');\n      setName(''); // Input alanını temizle\n      message.success('Görev başarıyla eklendi'); // Başarı mesajı göster\n    } catch (error) {\n      console.error('Görev eklenirken hata oluştu:', error);\n      message.error('Görev eklenirken hata oluştu'); // Hata mesajı göster\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onFinish: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"taskInput\",\n        rules: [{\n          required: true,\n          message: 'Lütfen bir görev girin!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"g\\xF6rev\",\n          placeholder: \"G\\xF6rev Ekleyin\",\n          value: name,\n          onChange: handleChange,\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(FileAddOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this),\n          size: \"large\",\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Task, {\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","Form","Input","Button","message","FileAddOutlined","axios","Task","jsxDEV","_jsxDEV","TaskForm","userData","_s","name","setName","apiUrl","handleChange","e","target","value","handleSubmit","data","Email","Password","User","UserID","post","headers","console","log","success","error","children","onFinish","Item","rules","required","placeholder","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","htmlType","type","icon","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/taskEdit.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport Task from '../components/task';\n\nconst TaskForm = ({ userData }) => {\n  const [name, setName] = useState('');\n  const apiUrl = 'https://v1.nocodeapi.com/gizem12345/google_sheets/JheosOqLeKiZJKFm?tabId=login';\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleSubmit = async () => {\n    const data = [\n      [\n        userData.Email,\n        userData.Password,\n        userData.User,\n        name,\n        userData.UserID\n      ]\n    ];\n\n    try {\n      await axios.post(\n        apiUrl,\n        data,\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      console.log('Görev başarıyla eklendi');\n      setName(''); // Input alanını temizle\n      message.success('Görev başarıyla eklendi'); // Başarı mesajı göster\n    } catch (error) {\n      console.error('Görev eklenirken hata oluştu:', error);\n      message.error('Görev eklenirken hata oluştu'); // Hata mesajı göster\n    }\n  };\n\n  return (\n    <div>\n      <Form onFinish={handleSubmit}>\n        <Form.Item\n          name=\"taskInput\"\n          rules={[{ required: true, message: 'Lütfen bir görev girin!' }]}\n        >\n          <Input\n            name='görev'\n            placeholder=\"Görev Ekleyin\"\n            value={name}\n            onChange={handleChange}\n            size=\"large\"\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            htmlType=\"submit\"\n            type=\"primary\"\n            icon={<FileAddOutlined />}\n            size=\"large\"\n          >\n            Ekle\n          </Button>\n        </Form.Item>\n      </Form>\n      <Task userData={userData}></Task>\n    </div>\n  );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}