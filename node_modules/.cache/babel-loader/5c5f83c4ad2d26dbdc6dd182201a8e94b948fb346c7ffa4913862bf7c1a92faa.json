{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, Badge, message } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCalendar = ({\n  apiUrl,\n  userData\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasksWithSubtasks = filteredUsers.map(user => ({\n        task: user.Task,\n        date: user.Date,\n        subtasks: user.SubTask ? user.SubTask.split(',').map(subtask => subtask.trim()) : [],\n        subdate: user.SubTaskDateRanges ? user.SubTaskDateRanges.split(',').map(subtaskdate => subtaskdate.trim()) : []\n      }));\n      setTasks(tasksWithSubtasks);\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n      message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n    }\n  };\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n\n  // Fonksiyon: Takvimde gösterilecek badge'leri oluştur\n  const dateCellRender = value => {\n    const tasksForDate = tasks.filter(task => {\n      const taskDate = new Date(task.date);\n      return taskDate.getDate() === value.date() && taskDate.getMonth() === value.month() && taskDate.getFullYear() === value.year();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      dateCellRender: dateCellRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCalendar, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskCalendar;\nexport default TaskCalendar;\nvar _c;\n$RefreshReg$(_c, \"TaskCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Badge","message","axios","jsxDEV","_jsxDEV","TaskCalendar","apiUrl","userData","_s","tasks","setTasks","fetchDataAndFilterTasks","response","get","allData","data","filteredUsers","filter","item","UserID","tasksWithSubtasks","map","user","task","Task","date","Date","subtasks","SubTask","split","subtask","trim","subdate","SubTaskDateRanges","subtaskdate","error","console","dateCellRender","value","tasksForDate","taskDate","getDate","getMonth","month","getFullYear","year","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Calendar, Badge,message } from 'antd';\nimport axios from 'axios';\n\nconst TaskCalendar = ({apiUrl,userData}) => {\n  const [tasks, setTasks] = useState([]);\n\n \n\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasksWithSubtasks = filteredUsers.map(user => ({\n        task: user.Task,\n        date: user.Date,\n        subtasks: user.SubTask ? user.SubTask.split(',').map(subtask => subtask.trim()) : [],\n        subdate: user.SubTaskDateRanges ? user.SubTaskDateRanges.split(',').map(subtaskdate => subtaskdate.trim()) : []\n      }));\n      setTasks(tasksWithSubtasks);\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n      message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n    }\n  };\n\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n\n  // Fonksiyon: Takvimde gösterilecek badge'leri oluştur\n  const dateCellRender = (value) => {\n    const tasksForDate = tasks.filter(task => {\n      const taskDate = new Date(task.date);\n      return taskDate.getDate() === value.date() && taskDate.getMonth() === value.month() && taskDate.getFullYear() === value.year();\n    });\n\n    \n  };\n\n  return (\n    <div>\n      <Calendar dateCellRender={dateCellRender} />\n    </div>\n  );\n};\n\nexport default TaskCalendar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,KAAK,EAACC,OAAO,QAAQ,MAAM;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAACC,MAAM;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAItC,MAAMc,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACP,MAAM,CAAC;MACxC,MAAMQ,OAAO,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI;MAClC,MAAMC,aAAa,GAAGF,OAAO,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKZ,QAAQ,CAACY,MAAM,CAAC;MAC7E,MAAMC,iBAAiB,GAAGJ,aAAa,CAACK,GAAG,CAACC,IAAI,KAAK;QACnDC,IAAI,EAAED,IAAI,CAACE,IAAI;QACfC,IAAI,EAAEH,IAAI,CAACI,IAAI;QACfC,QAAQ,EAAEL,IAAI,CAACM,OAAO,GAAGN,IAAI,CAACM,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAACR,GAAG,CAACS,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE;QACpFC,OAAO,EAAEV,IAAI,CAACW,iBAAiB,GAAGX,IAAI,CAACW,iBAAiB,CAACJ,KAAK,CAAC,GAAG,CAAC,CAACR,GAAG,CAACa,WAAW,IAAIA,WAAW,CAACH,IAAI,CAAC,CAAC,CAAC,GAAG;MAC/G,CAAC,CAAC,CAAC;MACHrB,QAAQ,CAACU,iBAAiB,CAAC;IAC7B,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5ClC,OAAO,CAACkC,KAAK,CAAC,sDAAsD,CAAC;IACvE;EACF,CAAC;EAEDrC,SAAS,CAAC,MAAM;IACda,uBAAuB,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM0B,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,YAAY,GAAG9B,KAAK,CAACQ,MAAM,CAACM,IAAI,IAAI;MACxC,MAAMiB,QAAQ,GAAG,IAAId,IAAI,CAACH,IAAI,CAACE,IAAI,CAAC;MACpC,OAAOe,QAAQ,CAACC,OAAO,CAAC,CAAC,KAAKH,KAAK,CAACb,IAAI,CAAC,CAAC,IAAIe,QAAQ,CAACE,QAAQ,CAAC,CAAC,KAAKJ,KAAK,CAACK,KAAK,CAAC,CAAC,IAAIH,QAAQ,CAACI,WAAW,CAAC,CAAC,KAAKN,KAAK,CAACO,IAAI,CAAC,CAAC;IAChI,CAAC,CAAC;EAGJ,CAAC;EAED,oBACEzC,OAAA;IAAA0C,QAAA,eACE1C,OAAA,CAACL,QAAQ;MAACsC,cAAc,EAAEA;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAC1C,EAAA,CA1CIH,YAAY;AAAA8C,EAAA,GAAZ9C,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}