{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/taskEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport Task from '../components/task';\nimport TaskData from '../services/taskdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  userData\n}) => {\n  _s();\n  const formRef = useRef(null);\n  const [name, setName] = useState('');\n  const [data, setData] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem001/google_sheets/viewGTYYvtJXMfOr?tabId=login';\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      setData(allData);\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      if (filteredUsers.length > 0) {\n        const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n        setFilteredTasks(tasks);\n      } else {\n        setFilteredTasks([]);\n      }\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n    }\n  };\n  useEffect(() => {\n    // İlk kez çalıştığında ve userData.UserID değiştiğinde veriyi alır\n    fetchDataAndFilterTasks();\n\n    // Her 10 saniyede bir veriyi güncellemek için setInterval kullanımı\n    const interval = setInterval(() => {\n      fetchDataAndFilterTasks();\n    }, 10000); // 10 saniyede bir yenileme yapılacak\n\n    // Component unmount olduğunda clearInterval ile interval'i temizle\n    return () => clearInterval(interval);\n  }, [userData.UserID]); // useEffect dependencies\n\n  const handleChange = e => {\n    setName(e.target.value);\n  };\n  const handleSubmit = async () => {\n    const data = [[userData.Email, userData.Password, userData.User, name, userData.UserID]];\n    try {\n      const response = await axios.post(apiUrl, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      formRef.current.resetFields();\n      message.success(\"Başarıyla Eklendi\");\n      console.log('Görev başarıyla eklendi:', response.data);\n\n      // Yeni görev ekledikten sonra verileri yeniden getir ve filtrele\n    } catch (error) {\n      message.warning(\"Ekleme Yapılamadı\");\n      if (error.response) {\n        console.error('Görev eklenirken hata oluştu:', error.response.data);\n      } else {\n        console.error('Görev eklenirken hata oluştu:', error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onFinish: handleSubmit,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"taskInput\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"g\\xF6rev\",\n          placeholder: \"G\\xF6rev Ekleyin\",\n          value: name,\n          onChange: handleChange,\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(FileAddOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 31\n          }, this),\n          size: \"large\",\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Task, {\n      userData: userData,\n      filteredTasks: filteredTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"yewnjwK7zUffhT2YnaIL3KK0HrU=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Form","Input","Button","message","FileAddOutlined","axios","Task","TaskData","jsxDEV","_jsxDEV","TaskForm","userData","_s","formRef","name","setName","data","setData","filteredTasks","setFilteredTasks","apiUrl","fetchDataAndFilterTasks","response","get","allData","filteredUsers","filter","item","UserID","length","tasks","flatMap","user","split","map","task","trim","error","console","interval","setInterval","clearInterval","handleChange","e","target","value","handleSubmit","Email","Password","User","post","headers","current","resetFields","success","log","warning","children","onFinish","ref","Item","placeholder","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","htmlType","type","icon","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/taskEdit.js"],"sourcesContent":["import React, { useState, useRef,useEffect } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport Task from '../components/task';\nimport TaskData from '../services/taskdata';\n\nconst TaskForm = ({ userData }) => {\n    \n    const formRef = useRef(null);\n    const [name, setName] = useState('');\n\n    const [data, setData] = useState([]);\n    const [filteredTasks, setFilteredTasks] = useState([]);\n    const apiUrl = 'https://v1.nocodeapi.com/gizem001/google_sheets/viewGTYYvtJXMfOr?tabId=login';\n\n    const fetchDataAndFilterTasks = async () => {\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n            setData(allData);\n\n            const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n\n            if (filteredUsers.length > 0) {\n                const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n                setFilteredTasks(tasks);\n            } else {\n                setFilteredTasks([]);\n            }\n\n        } catch (error) {\n            console.error('Failed to fetch data', error);\n        }\n    };\n\n    useEffect(() => {\n        // İlk kez çalıştığında ve userData.UserID değiştiğinde veriyi alır\n        fetchDataAndFilterTasks();\n\n        // Her 10 saniyede bir veriyi güncellemek için setInterval kullanımı\n        const interval = setInterval(() => {\n            fetchDataAndFilterTasks();\n        }, 10000); // 10 saniyede bir yenileme yapılacak\n\n        // Component unmount olduğunda clearInterval ile interval'i temizle\n        return () => clearInterval(interval);\n    }, [userData.UserID]); // useEffect dependencies\n\n\n    const handleChange = (e) => {\n        setName(e.target.value);\n    };\n\n    const handleSubmit = async () => {\n        const data = [\n            [\n                userData.Email,\n                userData.Password,\n                userData.User,\n                name,\n                userData.UserID\n            ]\n        ];\n\n        try {\n            const response = await axios.post(\n                apiUrl,\n                data,\n                {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n            );\n\n            formRef.current.resetFields();\n            message.success(\"Başarıyla Eklendi\");\n            console.log('Görev başarıyla eklendi:', response.data);\n            \n             // Yeni görev ekledikten sonra verileri yeniden getir ve filtrele\n        } catch (error) {\n            message.warning(\"Ekleme Yapılamadı\");\n            if (error.response) {\n                console.error('Görev eklenirken hata oluştu:', error.response.data);\n            } else {\n                console.error('Görev eklenirken hata oluştu:', error.message);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <Form onFinish={handleSubmit} ref={formRef}>\n                <Form.Item\n                    name=\"taskInput\"\n                >\n                    <Input\n                        name='görev'\n                        placeholder=\"Görev Ekleyin\"\n                        value={name}\n                        onChange={handleChange}\n                        size=\"large\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                        icon={<FileAddOutlined />}\n                        size=\"large\"\n                    >\n                        Ekle\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Task userData={userData} filteredTasks={filteredTasks}></Task>\n            \n            \n        </div>\n    );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}