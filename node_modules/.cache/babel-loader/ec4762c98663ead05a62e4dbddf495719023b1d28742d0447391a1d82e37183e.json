{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/services/taskwrapper.js\",\n  _s = $RefreshSig$();\n//Burada fonksiyonlar olacak.\nimport React, { useState } from \"react\";\nimport TaskForm from \"../components/taskform\";\nimport TaskList from \"/Users/gizem/Desktop/reactproje/src/components/tasklist.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem00001/google_sheets/xsWcTNrhFFLBFSqR?tabId=login';\n\n  // Function to fetch and filter tasks\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n      setData(tasks); // Set initial data\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n      message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n    }\n  };\n\n  // Fetch initial data on component mount\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n  const addTask = todo => {\n    setTodos([...todos, todo]);\n  };\n  const deleteTask = id => setTodos(todos.filter(todo => todo.id !== id));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Get Things Done !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(TaskList, {\n      task: todo,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskWrapper, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TaskWrapper;\nexport default TaskWrapper;\nvar _c;\n$RefreshReg$(_c, \"TaskWrapper\");","map":{"version":3,"names":["React","useState","TaskForm","TaskList","jsxDEV","_jsxDEV","TaskWrapper","_s","todos","setTodos","apiUrl","fetchDataAndFilterTasks","response","axios","get","allData","data","filteredUsers","filter","item","UserID","userData","tasks","flatMap","user","Task","split","map","task","trim","setData","error","console","message","useEffect","addTask","todo","deleteTask","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/services/taskwrapper.js"],"sourcesContent":["//Burada fonksiyonlar olacak.\nimport React, { useState } from \"react\";\nimport TaskForm from \"../components/taskform\";\nimport TaskList from \"/Users/gizem/Desktop/reactproje/src/components/tasklist.js\";\n\nconst TaskWrapper=()=>{\n    const [todos, setTodos] = useState([]);\n    const apiUrl = 'https://v1.nocodeapi.com/gizem00001/google_sheets/xsWcTNrhFFLBFSqR?tabId=login';\n\n    // Function to fetch and filter tasks\n    const fetchDataAndFilterTasks = async () => {\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n\n            const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n            const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n            setData(tasks); // Set initial data\n\n        } catch (error) {\n            console.error('Failed to fetch data', error);\n            message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n        }\n    };\n\n    // Fetch initial data on component mount\n    useEffect(() => {\n        fetchDataAndFilterTasks();\n    }, []);\n    const addTask = (todo) => {\n        setTodos([\n          ...todos,todo,\n        ]);\n      }\n    const deleteTask = (id) => setTodos(todos.filter((todo) => todo.id !== id));\n      return(\n        <div>\n            <h1>Get Things Done !</h1>\n            <TaskForm addTask={addTask} />\n            {todos.map((todo) =>\n        \n          <TaskList\n            task={todo}\n            deleteTask={deleteTask}\n          />\n            )}\n        \n        </div>\n      );\n\n}\nexport default TaskWrapper;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,4DAA4D;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElF,MAAMC,WAAW,GAACA,CAAA,KAAI;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,MAAM,GAAG,gFAAgF;;EAE/F;EACA,MAAMC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAACJ,MAAM,CAAC;MACxC,MAAMK,OAAO,GAAGH,QAAQ,CAACI,IAAI,CAACA,IAAI;MAElC,MAAMC,aAAa,GAAGF,OAAO,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKC,QAAQ,CAACD,MAAM,CAAC;MAC7E,MAAME,KAAK,GAAGL,aAAa,CAACM,OAAO,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC1FC,OAAO,CAACR,KAAK,CAAC,CAAC,CAAC;IAEpB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CE,OAAO,CAACF,KAAK,CAAC,sDAAsD,CAAC;IACzE;EACJ,CAAC;;EAED;EACAG,SAAS,CAAC,MAAM;IACZvB,uBAAuB,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EACN,MAAMwB,OAAO,GAAIC,IAAI,IAAK;IACtB3B,QAAQ,CAAC,CACP,GAAGD,KAAK,EAAC4B,IAAI,CACd,CAAC;EACJ,CAAC;EACH,MAAMC,UAAU,GAAIC,EAAE,IAAK7B,QAAQ,CAACD,KAAK,CAACU,MAAM,CAAEkB,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKA,EAAE,CAAC,CAAC;EACzE,oBACEjC,OAAA;IAAAkC,QAAA,gBACIlC,OAAA;MAAAkC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BtC,OAAA,CAACH,QAAQ;MAACiC,OAAO,EAAEA;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7BnC,KAAK,CAACmB,GAAG,CAAES,IAAI,iBAElB/B,OAAA,CAACF,QAAQ;MACPyB,IAAI,EAAEQ,IAAK;MACXC,UAAU,EAAEA;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAGd,CAAC;AAAApC,EAAA,CA7CKD,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}