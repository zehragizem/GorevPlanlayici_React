{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Calendar, message } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCalendar = ({\n  apiUrl,\n  userData\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(apiUrl);\n        const allData = response.data.data;\n        const filteredTasks = allData.filter(item => item.UserID === userData.UserID);\n        const formattedEvents = filteredTasks.flatMap(task => {\n          const taskStartDate = moment(task.Date.split(' to ')[0], 'DD-MM-YYYY').startOf('day');\n          const taskEndDate = moment(task.Date.split(' to ')[1], 'DD-MM-YYYY').endOf('day');\n          const taskEvent = {\n            title: task.Task,\n            start: taskStartDate.toDate(),\n            end: taskEndDate.toDate(),\n            allDay: true\n          };\n          const subtaskEvents = task.SubTaskDateRanges.split(',').map(dateRange => {\n            const [startDate, endDate] = dateRange.split(' to ').map(date => moment(date.trim(), 'DD-MM-YYYY').toDate());\n            return {\n              title: task.SubTask,\n              start: startDate,\n              end: endDate,\n              allDay: true\n            };\n          });\n          return [taskEvent, ...subtaskEvents];\n        });\n        setEvents(formattedEvents);\n      } catch (error) {\n        console.error('Failed to fetch data:', error);\n        message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n      }\n    };\n    fetchData();\n  }, [apiUrl, userData.UserID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      events: events,\n      style: {\n        height: '100vh'\n      },\n      onSelect: value => console.log(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCalendar, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = TaskCalendar;\nexport default TaskCalendar;\nvar _c;\n$RefreshReg$(_c, \"TaskCalendar\");","map":{"version":3,"names":["React","useEffect","useState","Calendar","message","axios","moment","jsxDEV","_jsxDEV","TaskCalendar","apiUrl","userData","_s","events","setEvents","fetchData","response","get","allData","data","filteredTasks","filter","item","UserID","formattedEvents","flatMap","task","taskStartDate","Date","split","startOf","taskEndDate","endOf","taskEvent","title","Task","start","toDate","end","allDay","subtaskEvents","SubTaskDateRanges","map","dateRange","startDate","endDate","date","trim","SubTask","error","console","children","style","height","onSelect","value","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/calendar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Calendar, message } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst TaskCalendar = ({ apiUrl, userData }) => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(apiUrl);\n        const allData = response.data.data;\n\n        const filteredTasks = allData.filter(item => item.UserID === userData.UserID);\n\n        const formattedEvents = filteredTasks.flatMap(task => {\n          const taskStartDate = moment(task.Date.split(' to ')[0], 'DD-MM-YYYY').startOf('day');\n          const taskEndDate = moment(task.Date.split(' to ')[1], 'DD-MM-YYYY').endOf('day');\n\n          const taskEvent = {\n            title: task.Task,\n            start: taskStartDate.toDate(),\n            end: taskEndDate.toDate(),\n            allDay: true,\n          };\n\n          const subtaskEvents = task.SubTaskDateRanges.split(',').map(dateRange => {\n            const [startDate, endDate] = dateRange.split(' to ').map(date => moment(date.trim(), 'DD-MM-YYYY').toDate());\n\n            return {\n              title: task.SubTask,\n              start: startDate,\n              end: endDate,\n              allDay: true,\n            };\n          });\n\n          return [taskEvent, ...subtaskEvents];\n        });\n\n        setEvents(formattedEvents);\n\n      } catch (error) {\n        console.error('Failed to fetch data:', error);\n        message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n      }\n    };\n\n    fetchData();\n  }, [apiUrl, userData.UserID]);\n\n  return (\n    <div>\n      <Calendar\n        events={events}\n        style={{ height: '100vh' }}\n        onSelect={(value) => console.log(value)}\n      />\n    </div>\n  );\n};\n\nexport default TaskCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}