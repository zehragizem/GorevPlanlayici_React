{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/tasklist.js\",\n  _s = $RefreshSig$();\nimport { Button, Popconfirm, message, ConfigProvider, TimePicker } from \"antd\";\nimport { FileExcelOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  task,\n  deleteTask,\n  userData,\n  apiUrl\n}) => {\n  _s();\n  const [subTask, setSubTask] = useState([]);\n  const [showSubTask, setShowSubTask] = useState(false);\n  const [selectedSubTask, setSelectedSubTask] = useState(null);\n  const [clickedSubtaskIndex, setClickedSubtaskIndex] = useState(null);\n  const handleSubtaskClick = index => {\n    setClickedSubtaskIndex(index);\n  };\n  const handleAddClick = index => {\n    // Handle the add button click event\n    message.success(`Subtask ${index} time range added!`);\n    // Reset the clicked subtask index after adding\n    setClickedSubtaskIndex(null);\n  };\n  const handleButtonClick = index => {\n    setSelectedSubTask(index);\n  };\n  const handleDelete = async task => {\n    console.log('Sil:', task);\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      // Silinecek task'in kimliğini (row_id) al\n      const deletedData = allData.find(item => item.Task === task && item.UserID === userData.UserID);\n      if (!deletedData) {\n        throw new Error('Görev bulunamadı.'); // Eğer görev bulunamazsa hata fırlat\n      }\n      const row_id = deletedData.row_id; // Görevin kimliği (row_id)\n\n      // Veritabanından silme işlemi için DELETE isteği gönder\n      await axios.delete(`${apiUrl}&row_id=${row_id}`);\n\n      // Başarılı bir şekilde silindiğinde bildirim göster\n      message.success('Görev başarıyla silindi.');\n      deleteTask(deletedData.Task);\n    } catch (error) {\n      console.error('Görev silinirken hata oluştu:', error);\n      message.error('Görev silinirken bir hata oluştu. Lütfen tekrar deneyin.');\n    }\n  };\n  const handleItemClick = async task => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID && item.Task === task);\n      const subtasks = filteredUsers.flatMap(user => user.SubTask.split(',').map(SubTask => SubTask.trim()));\n      setSubTask(subtasks);\n      setShowSubTask(true);\n    } catch (error) {\n      console.error('Alt görevler alınırken hata oluştu:', error);\n      message.error('Alt görev bulunamadı!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    theme: {\n      token: {\n        colorPrimary: '#d11ba7',\n        colorPrimaryHover: '#5b10b5',\n        colorIcon: 'black'\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            color: \"black\",\n            marginRight: '10px',\n            width: '637px'\n          },\n          onClick: () => handleItemClick(task),\n          children: [task, \" \", showSubTask ? /*#__PURE__*/_jsxDEV(UpOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 47\n          }, this) : /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Bu g\\xF6revi silmek istedi\\u011Finizden emin misiniz?\",\n          onConfirm: () => handleDelete(task),\n          okText: \"Evet\",\n          cancelText: \"Hay\\u0131r\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(FileExcelOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 35\n            }, this),\n            type: \"primary\",\n            style: {\n              marginBlockEnd: \"10px\"\n            },\n            children: \"Sil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), showSubTask && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '20px'\n        },\n        children: subTask.map((subtask, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleSubtaskClick(index),\n            children: subtask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), clickedSubtaskIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(TimePicker.RangePicker, {\n              style: {\n                marginLeft: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              style: {\n                marginLeft: '10px'\n              },\n              onClick: () => handleAddClick(index),\n              children: \"Ekle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"qx2bR9EAAuIiEuT6SVTAPXSNvcc=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["Button","Popconfirm","message","ConfigProvider","TimePicker","FileExcelOutlined","DownOutlined","UpOutlined","React","useState","axios","jsxDEV","_jsxDEV","TaskList","task","deleteTask","userData","apiUrl","_s","subTask","setSubTask","showSubTask","setShowSubTask","selectedSubTask","setSelectedSubTask","clickedSubtaskIndex","setClickedSubtaskIndex","handleSubtaskClick","index","handleAddClick","success","handleButtonClick","handleDelete","console","log","response","get","allData","data","deletedData","find","item","Task","UserID","Error","row_id","delete","error","handleItemClick","filteredUsers","filter","subtasks","flatMap","user","SubTask","split","map","trim","theme","token","colorPrimary","colorPrimaryHover","colorIcon","children","style","display","flexDirection","color","marginRight","width","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","onConfirm","okText","cancelText","icon","type","marginBlockEnd","marginLeft","subtask","marginBottom","RangePicker","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/tasklist.js"],"sourcesContent":["import { Button, Popconfirm, message, ConfigProvider, TimePicker } from \"antd\";\nimport { FileExcelOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport React, { useState } from \"react\";\nimport axios from 'axios';\n\nconst TaskList = ({ task, deleteTask, userData, apiUrl }) => {\n    const [subTask, setSubTask] = useState([]);\n    const [showSubTask, setShowSubTask] = useState(false);\n    const [selectedSubTask, setSelectedSubTask] = useState(null);\n    const [clickedSubtaskIndex, setClickedSubtaskIndex] = useState(null);\n\n  const handleSubtaskClick = (index) => {\n    setClickedSubtaskIndex(index);\n  };\n\n  const handleAddClick = (index) => {\n    // Handle the add button click event\n    message.success(`Subtask ${index} time range added!`);\n    // Reset the clicked subtask index after adding\n    setClickedSubtaskIndex(null);\n  };\n    const handleButtonClick = (index) => {\n        setSelectedSubTask(index);\n    };\n    const handleDelete = async (task) => {\n        console.log('Sil:', task);\n\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n            // Silinecek task'in kimliğini (row_id) al\n            const deletedData = allData.find(item => item.Task === task && item.UserID===userData.UserID);\n            if (!deletedData) {\n                throw new Error('Görev bulunamadı.'); // Eğer görev bulunamazsa hata fırlat\n            }\n\n            const row_id = deletedData.row_id; // Görevin kimliği (row_id)\n\n            // Veritabanından silme işlemi için DELETE isteği gönder\n            await axios.delete(`${apiUrl}&row_id=${row_id}`);\n\n            // Başarılı bir şekilde silindiğinde bildirim göster\n            message.success('Görev başarıyla silindi.');\n            deleteTask(deletedData.Task);\n\n        } catch (error) {\n            console.error('Görev silinirken hata oluştu:', error);\n            message.error('Görev silinirken bir hata oluştu. Lütfen tekrar deneyin.');\n        }\n    };\n\n    const handleItemClick = async (task) => {\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n            const filteredUsers = allData.filter(item => item.UserID === userData.UserID && item.Task === task);\n            const subtasks = filteredUsers.flatMap(user => user.SubTask.split(',').map(SubTask => SubTask.trim()));\n            setSubTask(subtasks);\n            setShowSubTask(true);\n        } catch (error) {\n            console.error('Alt görevler alınırken hata oluştu:', error);\n            message.error('Alt görev bulunamadı!');\n        }\n    };\n\n    return (\n\n        <ConfigProvider\n            theme={{\n                token: {\n                    colorPrimary: '#d11ba7',\n                    colorPrimaryHover: '#5b10b5',\n                    colorIcon: 'black'\n                }\n            }}\n\n\n        >\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <div style={{ display: \"flex\" }}>\n                    <Button\n                        style={{ color: \"black\", marginRight: '10px', width: '637px' }}\n                        onClick={() => handleItemClick(task)}\n                    >\n                        {task} {showSubTask ? <UpOutlined /> : <DownOutlined />}\n                    </Button>\n\n                    <Popconfirm\n                        title=\"Bu görevi silmek istediğinizden emin misiniz?\"\n                        onConfirm={() => handleDelete(task)}\n                        okText=\"Evet\"\n                        cancelText=\"Hayır\"\n                    >\n                        <Button\n                            icon={<FileExcelOutlined />}\n                            type=\"primary\"\n                            style={{ marginBlockEnd: \"10px\" }}\n                        >\n                            Sil\n                        </Button>\n                    </Popconfirm>\n                </div>\n\n                {showSubTask && (\n          <div style={{ marginLeft: '20px' }}>\n            {subTask.map((subtask, index) => (\n              <div key={index} style={{ marginBottom: '10px' }}>\n                <Button onClick={() => handleSubtaskClick(index)}>{subtask}</Button>\n                {clickedSubtaskIndex === index && (\n                  <div>\n                    <TimePicker.RangePicker style={{ marginLeft: '10px' }} />\n                    <Button type=\"primary\" style={{ marginLeft: '10px' }} onClick={() => handleAddClick(index)}>\n                      Ekle\n                    </Button>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n            </div>\n\n\n\n        </ConfigProvider>\n\n    );\n}\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}