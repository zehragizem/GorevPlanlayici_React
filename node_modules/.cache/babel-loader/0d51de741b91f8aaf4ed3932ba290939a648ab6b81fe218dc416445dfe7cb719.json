{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/taskform.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Form, Input, Button, DatePicker, message, ConfigProvider } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nconst TaskForm = ({\n  userData,\n  addTask,\n  apiUrl\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [subtask, setSubTask] = useState('');\n  const [user, setUser] = useState('');\n  const [date, setDate] = useState(null);\n  const formRef = useRef();\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async () => {\n    if (value) {\n      try {\n        const response = await axios.get(apiUrl);\n        const allData = response.data.data;\n        const formattedDates = date && date.length === 2 ? `${date[0].format('DD-MM-YYYY')} to ${date[1].format('DD-MM-YYYY')}` : null;\n        const taskData = [[userData.Email, userData.Password, userData.User, userData.Telephone, userData.Address, userData.UserID, value, subtask, formattedDates]];\n        if (user) {\n          const users = user.split(',').map(u => u.trim());\n          const promises = users.map(async singleUser => {\n            const filteredUser = allData.find(item => item.User === singleUser);\n            if (!filteredUser) {\n              throw new Error(`User ${singleUser} not found`);\n            }\n            const userTaskData = [[filteredUser.Email, filteredUser.Password, singleUser, filteredUser.Telephone, filteredUser.Address, filteredUser.UserID, value, subtask, formattedDates]];\n            setLoading(true);\n            message.loading(\"yükleniyor\");\n\n            // Simulating a network request\n            setTimeout(() => {\n              setLoading(false);\n              message.destroy(); // To remove the loading message after the loading is complete\n            }, 2000);\n            await axios.post(apiUrl, userTaskData);\n          });\n          await Promise.all(promises);\n        }\n        await axios.post(apiUrl, taskData);\n\n        // Reset form fields\n        formRef.current.resetFields();\n        message.success('Görev başarıyla eklendi.');\n        // Add task to the state or perform any other action as needed\n        addTask(value);\n      } catch (error) {\n        message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n        console.error('Görev eklenirken hata oluştu:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    theme: {\n      token: {\n        colorPrimary: '#d11ba7',\n        colorPrimaryHover: '#5b10b5',\n        colorIcon: 'black'\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: handleSubmit,\n      ref: formRef,\n      layout: \"inline\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"taskInput\",\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"g\\xF6rev\",\n          placeholder: \"G\\xF6rev Ekleyin\",\n          size: \"large\",\n          value: value,\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"subtaskInput\",\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"alt g\\xF6rev\",\n          placeholder: \"Alt G\\xF6rev Ekleyin\",\n          size: \"large\",\n          value: subtask,\n          onChange: e => setSubTask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"userAddInput\",\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"Ki\\u015Fi\",\n          placeholder: \"Ki\\u015Fi Ekle\",\n          size: \"large\",\n          value: user,\n          onChange: e => setUser(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"dateInput\",\n        children: /*#__PURE__*/_jsxDEV(RangePicker, {\n          placeholder: ['Başlangıç', 'Bitiş'],\n          size: \"large\",\n          value: date,\n          format: \"DD-MM-YYYY\",\n          onChange: date => setDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(FileAddOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this),\n          htmlType: \"submit\",\n          loading: loading,\n          type: \"primary\",\n          size: \"large\",\n          style: {\n            marginBlockEnd: '20px',\n            marginRight: '2px'\n          },\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"ODQ9ZC+DiV4hsmiEA9S7iYfhND8=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useRef","Form","Input","Button","DatePicker","message","ConfigProvider","FileAddOutlined","axios","moment","jsxDEV","_jsxDEV","RangePicker","TaskForm","userData","addTask","apiUrl","_s","value","setValue","subtask","setSubTask","user","setUser","date","setDate","formRef","loading","setLoading","handleSubmit","response","get","allData","data","formattedDates","length","format","taskData","Email","Password","User","Telephone","Address","UserID","users","split","map","u","trim","promises","singleUser","filteredUser","find","item","Error","userTaskData","setTimeout","destroy","post","Promise","all","current","resetFields","success","error","console","theme","token","colorPrimary","colorPrimaryHover","colorIcon","children","onFinish","ref","layout","Item","name","style","flex","placeholder","size","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","icon","htmlType","type","marginBlockEnd","marginRight","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/taskform.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Form, Input, Button, DatePicker, message, ConfigProvider } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nconst TaskForm = ({ userData, addTask, apiUrl }) => {\n  const [value, setValue] = useState('');\n  const [subtask, setSubTask] = useState('');\n  const [user, setUser] = useState('');\n  const [date, setDate] = useState(null);\n  const formRef = useRef();\n  const [loading, setLoading] = useState(false);\n\n\n  const handleSubmit = async () => {\n    if (value) {\n      try {\n        const response = await axios.get(apiUrl);\n        const allData = response.data.data;\n        const formattedDates = date && date.length === 2\n          ? `${date[0].format('DD-MM-YYYY')} to ${date[1].format('DD-MM-YYYY')}`\n          : null;\n\n        const taskData = [\n          [\n            userData.Email,\n            userData.Password,\n            userData.User,\n            userData.Telephone,\n            userData.Address,\n            userData.UserID,\n            value,\n            subtask,\n            formattedDates,\n          ]\n        ];\n\n        if (user) {\n          const users = user.split(',').map(u => u.trim());\n          const promises = users.map(async (singleUser) => {\n            const filteredUser = allData.find(item => item.User === singleUser);\n\n            if (!filteredUser) {\n              throw new Error(`User ${singleUser} not found`);\n            }\n\n            const userTaskData = [\n              [\n                filteredUser.Email,\n                filteredUser.Password,\n                singleUser,\n                filteredUser.Telephone,\n                filteredUser.Address,\n                filteredUser.UserID,\n                value,\n                subtask,\n                formattedDates,\n              ]\n            ];\n            setLoading(true);\n    message.loading(\"yükleniyor\");\n\n    // Simulating a network request\n    setTimeout(() => {\n      setLoading(false);\n      message.destroy();  // To remove the loading message after the loading is complete\n    }, 2000);\n            await axios.post(apiUrl, userTaskData);\n          });\n\n          await Promise.all(promises);\n        }\n\n        await axios.post(apiUrl, taskData);\n\n        // Reset form fields\n        formRef.current.resetFields();\n        message.success('Görev başarıyla eklendi.');\n        // Add task to the state or perform any other action as needed\n        addTask(value);\n\n      } catch (error) {\n        message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n        console.error('Görev eklenirken hata oluştu:', error);\n      }\n    }\n  };\n\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: '#d11ba7',\n          colorPrimaryHover: '#5b10b5',\n          colorIcon: 'black'\n        }\n      }}\n    >\n      <Form onFinish={handleSubmit} ref={formRef} layout=\"inline\">\n        <Form.Item name=\"taskInput\" style={{ flex: 1 }}>\n          <Input\n            name=\"görev\"\n            placeholder=\"Görev Ekleyin\"\n            size=\"large\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n        </Form.Item>\n        <Form.Item name=\"subtaskInput\" style={{ flex: 1 }}>\n          <Input\n            name=\"alt görev\"\n            placeholder=\"Alt Görev Ekleyin\"\n            size=\"large\"\n            value={subtask}\n            onChange={(e) => setSubTask(e.target.value)}\n          />\n        </Form.Item>\n        <Form.Item name=\"userAddInput\" style={{ flex: 1 }}>\n          <Input\n            name=\"Kişi\"\n            placeholder=\"Kişi Ekle\"\n            size=\"large\"\n            value={user}\n            onChange={(e) => setUser(e.target.value)}\n          />\n        </Form.Item>\n        <Form.Item name=\"dateInput\">\n          <RangePicker\n            placeholder={['Başlangıç', 'Bitiş']}\n            size=\"large\"\n            value={date}\n            format=\"DD-MM-YYYY\"\n            onChange={(date) => setDate(date)}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            icon={<FileAddOutlined />}\n            htmlType=\"submit\"\n            loading={loading}\n            type=\"primary\"\n            size=\"large\"\n            style={{ marginBlockEnd: '20px', marginRight: '2px' }}\n          >\n            Ekle\n          </Button>\n        </Form.Item>\n      </Form>\n    </ConfigProvider>\n  );\n};\n\nexport default TaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,cAAc,QAAQ,MAAM;AAC/E,SAASC,eAAe,QAAQ,mBAAmB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAM;EAAEC;AAAY,CAAC,GAAGR,UAAU;AAElC,MAAMS,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyB,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM2B,OAAO,GAAG1B,MAAM,CAAC,CAAC;EACxB,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAG7C,MAAM8B,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIX,KAAK,EAAE;MACT,IAAI;QACF,MAAMY,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAACf,MAAM,CAAC;QACxC,MAAMgB,OAAO,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI;QAClC,MAAMC,cAAc,GAAGV,IAAI,IAAIA,IAAI,CAACW,MAAM,KAAK,CAAC,GAC5C,GAAGX,IAAI,CAAC,CAAC,CAAC,CAACY,MAAM,CAAC,YAAY,CAAC,OAAOZ,IAAI,CAAC,CAAC,CAAC,CAACY,MAAM,CAAC,YAAY,CAAC,EAAE,GACpE,IAAI;QAER,MAAMC,QAAQ,GAAG,CACf,CACEvB,QAAQ,CAACwB,KAAK,EACdxB,QAAQ,CAACyB,QAAQ,EACjBzB,QAAQ,CAAC0B,IAAI,EACb1B,QAAQ,CAAC2B,SAAS,EAClB3B,QAAQ,CAAC4B,OAAO,EAChB5B,QAAQ,CAAC6B,MAAM,EACfzB,KAAK,EACLE,OAAO,EACPc,cAAc,CACf,CACF;QAED,IAAIZ,IAAI,EAAE;UACR,MAAMsB,KAAK,GAAGtB,IAAI,CAACuB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;UAChD,MAAMC,QAAQ,GAAGL,KAAK,CAACE,GAAG,CAAC,MAAOI,UAAU,IAAK;YAC/C,MAAMC,YAAY,GAAGnB,OAAO,CAACoB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACb,IAAI,KAAKU,UAAU,CAAC;YAEnE,IAAI,CAACC,YAAY,EAAE;cACjB,MAAM,IAAIG,KAAK,CAAC,QAAQJ,UAAU,YAAY,CAAC;YACjD;YAEA,MAAMK,YAAY,GAAG,CACnB,CACEJ,YAAY,CAACb,KAAK,EAClBa,YAAY,CAACZ,QAAQ,EACrBW,UAAU,EACVC,YAAY,CAACV,SAAS,EACtBU,YAAY,CAACT,OAAO,EACpBS,YAAY,CAACR,MAAM,EACnBzB,KAAK,EACLE,OAAO,EACPc,cAAc,CACf,CACF;YACDN,UAAU,CAAC,IAAI,CAAC;YACxBvB,OAAO,CAACsB,OAAO,CAAC,YAAY,CAAC;;YAE7B;YACA6B,UAAU,CAAC,MAAM;cACf5B,UAAU,CAAC,KAAK,CAAC;cACjBvB,OAAO,CAACoD,OAAO,CAAC,CAAC,CAAC,CAAE;YACtB,CAAC,EAAE,IAAI,CAAC;YACA,MAAMjD,KAAK,CAACkD,IAAI,CAAC1C,MAAM,EAAEuC,YAAY,CAAC;UACxC,CAAC,CAAC;UAEF,MAAMI,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;QAC7B;QAEA,MAAMzC,KAAK,CAACkD,IAAI,CAAC1C,MAAM,EAAEqB,QAAQ,CAAC;;QAElC;QACAX,OAAO,CAACmC,OAAO,CAACC,WAAW,CAAC,CAAC;QAC7BzD,OAAO,CAAC0D,OAAO,CAAC,0BAA0B,CAAC;QAC3C;QACAhD,OAAO,CAACG,KAAK,CAAC;MAEhB,CAAC,CAAC,OAAO8C,KAAK,EAAE;QACd3D,OAAO,CAAC2D,KAAK,CAAC,0DAA0D,CAAC;QACzEC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF;EACF,CAAC;EAED,oBACErD,OAAA,CAACL,cAAc;IACb4D,KAAK,EAAE;MACLC,KAAK,EAAE;QACLC,YAAY,EAAE,SAAS;QACvBC,iBAAiB,EAAE,SAAS;QAC5BC,SAAS,EAAE;MACb;IACF,CAAE;IAAAC,QAAA,eAEF5D,OAAA,CAACV,IAAI;MAACuE,QAAQ,EAAE3C,YAAa;MAAC4C,GAAG,EAAE/C,OAAQ;MAACgD,MAAM,EAAC,QAAQ;MAAAH,QAAA,gBACzD5D,OAAA,CAACV,IAAI,CAAC0E,IAAI;QAACC,IAAI,EAAC,WAAW;QAACC,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAE,CAAE;QAAAP,QAAA,eAC7C5D,OAAA,CAACT,KAAK;UACJ0E,IAAI,EAAC,UAAO;UACZG,WAAW,EAAC,kBAAe;UAC3BC,IAAI,EAAC,OAAO;UACZ9D,KAAK,EAAEA,KAAM;UACb+D,QAAQ,EAAGC,CAAC,IAAK/D,QAAQ,CAAC+D,CAAC,CAACC,MAAM,CAACjE,KAAK;QAAE;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACZ5E,OAAA,CAACV,IAAI,CAAC0E,IAAI;QAACC,IAAI,EAAC,cAAc;QAACC,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAE,CAAE;QAAAP,QAAA,eAChD5D,OAAA,CAACT,KAAK;UACJ0E,IAAI,EAAC,cAAW;UAChBG,WAAW,EAAC,sBAAmB;UAC/BC,IAAI,EAAC,OAAO;UACZ9D,KAAK,EAAEE,OAAQ;UACf6D,QAAQ,EAAGC,CAAC,IAAK7D,UAAU,CAAC6D,CAAC,CAACC,MAAM,CAACjE,KAAK;QAAE;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACZ5E,OAAA,CAACV,IAAI,CAAC0E,IAAI;QAACC,IAAI,EAAC,cAAc;QAACC,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAE,CAAE;QAAAP,QAAA,eAChD5D,OAAA,CAACT,KAAK;UACJ0E,IAAI,EAAC,WAAM;UACXG,WAAW,EAAC,gBAAW;UACvBC,IAAI,EAAC,OAAO;UACZ9D,KAAK,EAAEI,IAAK;UACZ2D,QAAQ,EAAGC,CAAC,IAAK3D,OAAO,CAAC2D,CAAC,CAACC,MAAM,CAACjE,KAAK;QAAE;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACZ5E,OAAA,CAACV,IAAI,CAAC0E,IAAI;QAACC,IAAI,EAAC,WAAW;QAAAL,QAAA,eACzB5D,OAAA,CAACC,WAAW;UACVmE,WAAW,EAAE,CAAC,WAAW,EAAE,OAAO,CAAE;UACpCC,IAAI,EAAC,OAAO;UACZ9D,KAAK,EAAEM,IAAK;UACZY,MAAM,EAAC,YAAY;UACnB6C,QAAQ,EAAGzD,IAAI,IAAKC,OAAO,CAACD,IAAI;QAAE;UAAA4D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACZ5E,OAAA,CAACV,IAAI,CAAC0E,IAAI;QAAAJ,QAAA,eACR5D,OAAA,CAACR,MAAM;UACLqF,IAAI,eAAE7E,OAAA,CAACJ,eAAe;YAAA6E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAC1BE,QAAQ,EAAC,QAAQ;UACjB9D,OAAO,EAAEA,OAAQ;UACjB+D,IAAI,EAAC,SAAS;UACdV,IAAI,EAAC,OAAO;UACZH,KAAK,EAAE;YAAEc,cAAc,EAAE,MAAM;YAAEC,WAAW,EAAE;UAAM,CAAE;UAAArB,QAAA,EACvD;QAED;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAErB,CAAC;AAACtE,EAAA,CAjJIJ,QAAQ;AAAAgF,EAAA,GAARhF,QAAQ;AAmJd,eAAeA,QAAQ;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}