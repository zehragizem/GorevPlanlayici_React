{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/login.js\";\nimport React from 'react';\nimport { Typography, Form, Input, Button, message, ConfigProvider } from 'antd';\nimport \"./login.css\";\nimport Image from \"/Users/gizem/Desktop/reactproje/src/assets/images/ark2.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const handleLogin = values => {\n    message.success(\"Başarılı\");\n    console.log('Received values:', values);\n  };\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    theme: {\n      token: {\n        colorPrimary: '#d11ba7',\n        colorPrimaryHover: '#5b10b5',\n        // Örnek bir renk tokenı\n        colorText: \"#fff\"\n        //colorBgMask:\"#d11ba7\"\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appBg\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"loginForm\",\n        onFinish: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Ho\\u015F Geldiniz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Email\",\n          name: \"myEmail\",\n          rules: [{\n            required: true,\n            type: \"email\",\n            message: \"Lütfen geçerli bir email adresi girin.\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"E-mail girin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u015Eifre\",\n          name: \"myPassword\",\n          rules: [{\n            required: true,\n            message: \"Lütfen şifrenizi girin.\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            placeholder: \"\\u015Eifre girin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            block: true,\n            children: \"Giri\\u015F Yap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Typography","Form","Input","Button","message","ConfigProvider","Image","jsxDEV","_jsxDEV","Login","handleLogin","values","success","console","log","theme","token","colorPrimary","colorPrimaryHover","colorText","children","className","onFinish","Title","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","Item","label","name","rules","required","type","placeholder","Password","htmlType","block","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/login.js"],"sourcesContent":["import React from 'react';\nimport { Typography, Form, Input, Button, message,ConfigProvider } from 'antd';\nimport \"./login.css\";\nimport Image from \"/Users/gizem/Desktop/reactproje/src/assets/images/ark2.jpg\";\n\nconst Login = () => {\n\n    const handleLogin = (values) => {\n        message.success(\"Başarılı\");\n        console.log('Received values:', values);\n    }\n\n    return (\n        <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: '#d11ba7',\n          colorPrimaryHover: '#5b10b5', // Örnek bir renk tokenı\n          colorText:\"#fff\",\n          //colorBgMask:\"#d11ba7\"\n        },\n        \n\n      }}\n    >\n        <div className=\"appBg\">\n            <Form className=\"loginForm\" onFinish={handleLogin}>\n            <Typography.Title style={{ textAlign: 'center' }}>Hoş Geldiniz</Typography.Title>\n\n                <Form.Item \n                    label=\"Email\" \n                    name=\"myEmail\"\n                    rules={[\n                        {\n                            required: true,\n                            type: \"email\",\n                            message: \"Lütfen geçerli bir email adresi girin.\"\n                        }\n                    ]}\n                >\n                    <Input placeholder=\"E-mail girin\" />\n                </Form.Item>\n                <Form.Item \n                    label=\"Şifre\" \n                    name=\"myPassword\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Lütfen şifrenizi girin.\"\n                        }\n                    ]}\n                >\n                    <Input.Password placeholder=\"Şifre girin\" />\n                </Form.Item>\n                <Form.Item style={{ textAlign: 'center' }}>\n    <Button type='primary' htmlType='submit' block>Giriş Yap</Button>\n</Form.Item>\n\n\n            </Form>\n        </div>\n        </ConfigProvider>\n    );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}