{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/task.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'antd';\nimport fetchDataAndFilterTasks from '../services/taskdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  userData\n}) => {\n  _s();\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const refetchDataAndFilter = async () => {\n    const tasks = await fetchDataAndFilterTasks(userData);\n    setFilteredTasks(tasks);\n  };\n  useEffect(() => {\n    refetchDataAndFilter(); // İlk renderda ve userData değiştiğinde veriyi yenile\n  }, [userData]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refetchDataAndFilter(); // 10 saniyede bir veriyi yenile\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [userData]); // userData bağımlılığı\n\n  useEffect(() => {\n    // Her filteredTasks değiştiğinde çalışacak\n    console.log('filteredTasks güncellendi:', filteredTasks);\n  }, [filteredTasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"G\\xF6revleriniz:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), filteredTasks.length > 0 ? filteredTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginBottom: '10px'\n      },\n      block: true,\n      children: task\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this)) : \"Yükleniyor...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Task, \"PH1X+vwFCNbwoZjdeAXoycC+r2w=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useEffect","Button","fetchDataAndFilterTasks","jsxDEV","_jsxDEV","Task","userData","_s","filteredTasks","setFilteredTasks","refetchDataAndFilter","tasks","interval","setInterval","clearInterval","console","log","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","index","marginBottom","block","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from 'antd';\nimport fetchDataAndFilterTasks from '../services/taskdata';\n\nconst Task = ({ userData }) => {\n    const [filteredTasks, setFilteredTasks] = useState([]);\n    \n    const refetchDataAndFilter = async () => {\n        const tasks = await fetchDataAndFilterTasks(userData);\n        setFilteredTasks(tasks);\n    };\n\n    useEffect(() => {\n        refetchDataAndFilter(); // İlk renderda ve userData değiştiğinde veriyi yenile\n    }, [userData]);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            refetchDataAndFilter(); // 10 saniyede bir veriyi yenile\n        }, 10000);\n\n        return () => clearInterval(interval);\n    }, [userData]); // userData bağımlılığı\n\n    useEffect(() => {\n        // Her filteredTasks değiştiğinde çalışacak\n        console.log('filteredTasks güncellendi:', filteredTasks);\n    }, [filteredTasks]);\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h2>Görevleriniz:</h2>\n            {filteredTasks.length > 0 ? (\n                filteredTasks.map((task, index) => (\n                    <Button key={index} style={{ marginBottom: '10px' }} block>\n                        {task}\n                    </Button>\n                ))\n            ) : (\n                \"Yükleniyor...\"\n            )}\n        </div>\n    );\n};\n\nexport default Task;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,MAAM;AAC7B,OAAOC,uBAAuB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,KAAK,GAAG,MAAMT,uBAAuB,CAACI,QAAQ,CAAC;IACrDG,gBAAgB,CAACE,KAAK,CAAC;EAC3B,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZU,oBAAoB,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEdN,SAAS,CAAC,MAAM;IACZ,MAAMY,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BH,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,EAAE,KAAK,CAAC;IAET,OAAO,MAAMI,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhBN,SAAS,CAAC,MAAM;IACZ;IACAe,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAER,aAAa,CAAC;EAC5D,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,oBACIJ,OAAA;IAAKa,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5Bf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBf,aAAa,CAACgB,MAAM,GAAG,CAAC,GACrBhB,aAAa,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BvB,OAAA,CAACH,MAAM;MAAagB,KAAK,EAAE;QAAEW,YAAY,EAAE;MAAO,CAAE;MAACC,KAAK;MAAAV,QAAA,EACrDO;IAAI,GADIC,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACX,CAAC,GAEF,eACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAChB,EAAA,CAvCIF,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAyCV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}