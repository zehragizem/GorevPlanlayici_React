{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Typography, Form, Input, Button, message, ConfigProvider } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nconst loginData = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem11/google_sheets/ICsbCoIOoLbnWrHj?tabId=login';\n  const handleLogin = async values => {\n    const {\n      Email,\n      myPassword\n    } = values;\n\n    // Veri kaynağından alınan verileri kontrol et\n    const user = data.find(item => item.Email === Email && item.Password === myPassword);\n    if (user) {\n      message.success('Başarılı giriş');\n      formRef.current.resetFields();\n    } else {\n      message.error('Hatalı email veya şifre');\n    }\n  };\n\n  // Veri kaynağından verileri getiren fonksiyon\n  const getData = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      setData(response.data.data);\n    } catch (error) {\n      console.error('Veri alınamadı', error);\n    }\n  };\n\n  // Component yüklendiğinde verileri getir\n  useEffect(() => {\n    getData();\n  }, []);\n};\n_s(loginData, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\nexport default loginData;","map":{"version":3,"names":["React","useRef","useState","useEffect","Typography","Form","Input","Button","message","ConfigProvider","UserOutlined","axios","loginData","_s","data","setData","apiUrl","handleLogin","values","Email","myPassword","user","find","item","Password","success","formRef","current","resetFields","error","getData","response","get","console"],"sources":["/Users/gizem/Desktop/reactproje/src/components/logindata.js"],"sourcesContent":["import React, { useRef, useState,useEffect } from 'react';\nimport { Typography, Form, Input, Button, message, ConfigProvider } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nconst loginData=()=>{\n    const [data, setData] = useState([]);\n    const apiUrl = 'https://v1.nocodeapi.com/gizem11/google_sheets/ICsbCoIOoLbnWrHj?tabId=login';\n    const handleLogin = async (values) => {\n        const { Email, myPassword } = values;\n\n        // Veri kaynağından alınan verileri kontrol et\n        const user = data.find(item => item.Email === Email && item.Password === myPassword);\n\n        if (user) {\n            message.success('Başarılı giriş');\n            formRef.current.resetFields();\n        } else {\n            message.error('Hatalı email veya şifre');\n        }\n    };\n\n    // Veri kaynağından verileri getiren fonksiyon\n    const getData = async () => {\n        try {\n            const response = await axios.get(apiUrl);\n            setData(response.data.data);\n        } catch (error) {\n            console.error('Veri alınamadı', error);\n        }\n    };\n\n    // Component yüklendiğinde verileri getir\n    useEffect(() => {\n        getData();\n    }, []);\n\n}\nexport default loginData;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACzD,SAASC,UAAU,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAAEC,cAAc,QAAQ,MAAM;AAC/E,SAASC,YAAY,QAAQ,mBAAmB;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,SAAS,GAACA,CAAA,KAAI;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMc,MAAM,GAAG,6EAA6E;EAC5F,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;IAClC,MAAM;MAAEC,KAAK;MAAEC;IAAW,CAAC,GAAGF,MAAM;;IAEpC;IACA,MAAMG,IAAI,GAAGP,IAAI,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,KAAK,KAAKA,KAAK,IAAII,IAAI,CAACC,QAAQ,KAAKJ,UAAU,CAAC;IAEpF,IAAIC,IAAI,EAAE;MACNb,OAAO,CAACiB,OAAO,CAAC,gBAAgB,CAAC;MACjCC,OAAO,CAACC,OAAO,CAACC,WAAW,CAAC,CAAC;IACjC,CAAC,MAAM;MACHpB,OAAO,CAACqB,KAAK,CAAC,yBAAyB,CAAC;IAC5C;EACJ,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAChB,MAAM,CAAC;MACxCD,OAAO,CAACgB,QAAQ,CAACjB,IAAI,CAACA,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZI,OAAO,CAACJ,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IAC1C;EACJ,CAAC;;EAED;EACA1B,SAAS,CAAC,MAAM;IACZ2B,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;AAEV,CAAC;AAAAjB,EAAA,CAhCKD,SAAS;AAiCf,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}