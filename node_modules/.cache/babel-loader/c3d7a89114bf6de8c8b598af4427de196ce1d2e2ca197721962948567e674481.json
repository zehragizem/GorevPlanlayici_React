{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/taskform.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Form, Input, Button, DatePicker, message, ConfigProvider } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nconst TaskForm = ({\n  userData,\n  addTask,\n  apiUrl\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [subtask, setSubTask] = useState('');\n  const [user, setUser] = useState('');\n  const [date, setDate] = useState(null);\n  const formRef = useRef();\n  const handleSubmit = async () => {\n    if (value) {\n      try {\n        const response = await axios.get(apiUrl);\n        const allData = response.data.data;\n        const taskData = [[userData.Email, userData.Password, userData.User, userData.Telephone, userData.Address, userData.UserID, value, subtask, date ? date.format('YYYY-MM-DD') : null]];\n        if (user) {\n          const users = user.split(',').map(u => u.trim());\n          setUser(users);\n          const promises = users.map(async singleUser => {\n            const filteredUser = allData.find(item => item.User === singleUser);\n            if (!filteredUser) {\n              throw new Error(`User ${singleUser} not found`);\n            }\n            const task = [[filteredUser.Email, filteredUser.Password, singleUser, filteredUser.Telephone, filteredUser.Address, filteredUser.UserID, value, subtask, date ? date.format('YYYY-MM-DD') : null]];\n            console.log(users);\n            // Post new task data\n\n            await axios.post(apiUrl, task);\n          });\n        }\n        await axios.post(apiUrl, taskData);\n\n        // Reset form fields\n        formRef.current.resetFields();\n        message.success('Görev başarıyla eklendi.');\n        // Add task to the state or perform any other action as needed\n        addTask(value);\n      } catch (error) {\n        message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n        console.error('Görev eklenirken hata oluştu:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    theme: {\n      token: {\n        colorPrimary: '#d11ba7',\n        colorPrimaryHover: '#5b10b5',\n        colorIcon: 'black'\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: handleSubmit,\n      ref: formRef,\n      layout: \"inline\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"taskInput\",\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"g\\xF6rev\",\n          placeholder: \"G\\xF6rev Ekleyin\",\n          size: \"large\",\n          value: value,\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"subtaskInput\",\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"alt g\\xF6rev\",\n          placeholder: \"Alt G\\xF6rev Ekleyin\",\n          size: \"large\",\n          value: subtask,\n          onChange: e => setSubTask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"userAddInput\",\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"Ki\\u015Fi\",\n          placeholder: \"Ki\\u015Fi Ekle\",\n          size: \"large\",\n          value: user,\n          onChange: e => setUser(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"dateInput\",\n        children: /*#__PURE__*/_jsxDEV(RangePicker, {\n          placeholder: \"Tarih Se\\xE7in\",\n          size: \"large\",\n          value: date,\n          onChange: date => setDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(FileAddOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }, this),\n          htmlType: \"submit\",\n          type: \"primary\",\n          size: \"large\",\n          style: {\n            marginBlockEnd: '20px',\n            marginRight: '2px'\n          },\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"S+d7/iQf/EN4U2FdYeaQ9ZIuOZw=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useRef","Form","Input","Button","DatePicker","message","ConfigProvider","FileAddOutlined","axios","jsxDEV","_jsxDEV","RangePicker","TaskForm","userData","addTask","apiUrl","_s","value","setValue","subtask","setSubTask","user","setUser","date","setDate","formRef","handleSubmit","response","get","allData","data","taskData","Email","Password","User","Telephone","Address","UserID","format","users","split","map","u","trim","promises","singleUser","filteredUser","find","item","Error","task","console","log","post","current","resetFields","success","error","theme","token","colorPrimary","colorPrimaryHover","colorIcon","children","onFinish","ref","layout","Item","name","style","flex","placeholder","size","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","icon","htmlType","type","marginBlockEnd","marginRight","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/taskform.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Form, Input, Button, DatePicker, message, ConfigProvider } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nconst { RangePicker } = DatePicker;\n\n\nconst TaskForm = ({ userData, addTask, apiUrl }) => {\n  const [value, setValue] = useState('');\n  const [subtask, setSubTask] = useState('');\n  const [user, setUser] = useState('');\n  const [date, setDate] = useState(null);\n  const formRef = useRef();\n\n  const handleSubmit = async () => {\n    if (value) {\n      try {\n        const response = await axios.get(apiUrl);\n        const allData = response.data.data;\n        const taskData = [\n          [\n            userData.Email,\n            userData.Password,\n            userData.User,\n            userData.Telephone,\n            userData.Address,\n            userData.UserID,\n            value,\n            subtask,\n            date ? date.format('YYYY-MM-DD') : null\n          ]\n        ];\n        if(user){\n        const users = user.split(',').map(u => u.trim());\n        setUser(users);\n        const promises = users.map(async (singleUser) => {\n        const filteredUser = allData.find(item => item.User === singleUser);\n          \n          if (!filteredUser) {\n            throw new Error(`User ${singleUser} not found`);\n          }\n\n          \n          const task = [\n            [\n              filteredUser.Email,\n              filteredUser.Password,\n              singleUser,\n              filteredUser.Telephone,\n              filteredUser.Address,\n              filteredUser.UserID,\n              value,\n              subtask,\n              date ? date.format('YYYY-MM-DD') : null\n            ]\n          ];\n          console.log(users);\n          // Post new task data\n          \n          await axios.post(apiUrl, task);\n        });\n        }\n        await axios.post(apiUrl, taskData);\n\n\n        // Reset form fields\n        formRef.current.resetFields();\n        message.success('Görev başarıyla eklendi.');\n        // Add task to the state or perform any other action as needed\n        addTask(value);\n        \n\n      } catch (error) {\n        message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n        console.error('Görev eklenirken hata oluştu:', error);\n      }\n    }\n  };\n\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: '#d11ba7',\n          colorPrimaryHover: '#5b10b5',\n          colorIcon: 'black'\n        }\n      }}\n\n\n    >\n      <Form onFinish={handleSubmit} ref={formRef} layout=\"inline\">\n        <Form.Item name=\"taskInput\" style={{ flex: 1 }}>\n          <Input\n            name=\"görev\"\n            placeholder=\"Görev Ekleyin\"\n            size=\"large\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n        </Form.Item>\n        <Form.Item name=\"subtaskInput\" style={{ flex: 1 }}>\n          <Input\n            name=\"alt görev\"\n            placeholder=\"Alt Görev Ekleyin\"\n            size=\"large\"\n            value={subtask}\n            onChange={(e) => setSubTask(e.target.value)}\n          />\n        </Form.Item>\n        <Form.Item name=\"userAddInput\" style={{ flex: 1 }}>\n          <Input\n            name=\"Kişi\"\n            placeholder=\"Kişi Ekle\"\n            size=\"large\"\n            value={user}\n            onChange={(e) => setUser(e.target.value)}\n\n          />\n        </Form.Item>\n        <Form.Item name=\"dateInput\" >\n          <RangePicker\n            placeholder=\"Tarih Seçin\"\n            size=\"large\"\n            value={date}\n            onChange={(date) => setDate(date)}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            icon={<FileAddOutlined />}\n            htmlType=\"submit\"\n            type=\"primary\"\n            size=\"large\"\n            style={{ marginBlockEnd: '20px', marginRight: '2px' }}\n          >\n            Ekle\n          </Button>\n        </Form.Item>\n      </Form>\n    </ConfigProvider>\n  );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}