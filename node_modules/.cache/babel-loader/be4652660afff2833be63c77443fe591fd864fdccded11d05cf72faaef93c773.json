{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/taskAddList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button, message, Popconfirm } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskAddList = ({\n  userData\n}) => {\n  _s();\n  const [veri, setVeri] = useState([]); // Initialize veri state with data prop or an empty array\n  const apiUrl = 'https://v1.nocodeapi.com/gizem00001/google_sheets/xsWcTNrhFFLBFSqR?tabId=login';\n  useEffect(() => {\n    fetchData(); // Call fetchData function on component mount\n  }, []); // Empty dependency array ensures this effect runs once on component mount\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      setVeri(filteredUsers);\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n      message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n    }\n  };\n  const handleUpdate = task => {\n    console.log('Güncelle:', task);\n    // Güncelleme işlemini burada gerçekleştir (örneğin, bir form gösterilebilir)\n  };\n  const handleDelete = async task => {\n    console.log('Sil:', task);\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n\n      // Silinecek task'in kimliğini (row_id) al\n      const deletedData = allData.find(item => item.Task === task);\n      if (!deletedData) {\n        throw new Error('Görev bulunamadı.'); // Eğer görev bulunamazsa hata fırlat\n      }\n      const row_id = deletedData.row_id; // Görevin kimliği (row_id)\n\n      // Veritabanından silme işlemi için DELETE isteği gönder\n      await axios.delete(`https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login&row_id=${row_id}`);\n\n      // Başarılı bir şekilde silindiğinde bildirim göster\n      message.success('Görev başarıyla silindi.');\n\n      // Yeniden veri çekme ve state'i güncelleme\n      const updatedData = allData.filter(item => item.Task !== task); // Filter out the deleted task\n      setVeri(updatedData); // Update veri state with updated data\n    } catch (error) {\n      console.error('Görev silinirken hata oluştu:', error);\n      message.error('Görev silinirken bir hata oluştu. Lütfen tekrar deneyin.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"G\\xF6revleriniz:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), veri && veri.length > 0 ? veri.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          flex: 1,\n          marginRight: '10px'\n        },\n        block: true,\n        children: item.Task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n        title: \"Bu g\\xF6revi silmek istedi\\u011Finizden emin misiniz?\",\n        onConfirm: () => handleDelete(item),\n        okText: \"Evet\",\n        cancelText: \"Hay\\u0131r\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"danger\",\n          children: \"Sil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Y\\xFCkleniyor...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskAddList, \"dccw0Hngkuc1GV7TO7N+iuuODq4=\");\n_c = TaskAddList;\nexport default TaskAddList;\nvar _c;\n$RefreshReg$(_c, \"TaskAddList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Form","Input","Button","message","Popconfirm","axios","jsxDEV","_jsxDEV","TaskAddList","userData","_s","veri","setVeri","apiUrl","fetchData","response","get","allData","data","filteredUsers","filter","item","UserID","error","console","handleUpdate","task","log","handleDelete","deletedData","find","Task","Error","row_id","delete","success","updatedData","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","marginBottom","display","justifyContent","alignItems","flex","marginRight","block","title","onConfirm","okText","cancelText","type","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/taskAddList.js"],"sourcesContent":["\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button, message,Popconfirm } from 'antd';\nimport axios from 'axios';\nconst TaskAddList = ({userData}) => {\n    const [veri, setVeri] = useState([]); // Initialize veri state with data prop or an empty array\n    const apiUrl = 'https://v1.nocodeapi.com/gizem00001/google_sheets/xsWcTNrhFFLBFSqR?tabId=login';\n\n    useEffect(() => {\n        fetchData(); // Call fetchData function on component mount\n    }, []); // Empty dependency array ensures this effect runs once on component mount\n    const fetchData = async () => {\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n            const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n            setVeri(filteredUsers);\n        } catch (error) {\n            console.error('Failed to fetch data', error);\n            message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n        }\n    };\n\n    const handleUpdate = (task) => {\n        console.log('Güncelle:', task);\n        // Güncelleme işlemini burada gerçekleştir (örneğin, bir form gösterilebilir)\n    };\n\n    const handleDelete = async (task) => {\n        console.log('Sil:', task);\n\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n\n            // Silinecek task'in kimliğini (row_id) al\n            const deletedData = allData.find(item => item.Task === task);\n            if (!deletedData) {\n                throw new Error('Görev bulunamadı.'); // Eğer görev bulunamazsa hata fırlat\n            }\n\n            const row_id = deletedData.row_id; // Görevin kimliği (row_id)\n\n            // Veritabanından silme işlemi için DELETE isteği gönder\n            await axios.delete(`https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login&row_id=${row_id}`);\n\n            // Başarılı bir şekilde silindiğinde bildirim göster\n            message.success('Görev başarıyla silindi.');\n\n            // Yeniden veri çekme ve state'i güncelleme\n            const updatedData = allData.filter(item => item.Task !== task); // Filter out the deleted task\n            setVeri(updatedData); // Update veri state with updated data\n        } catch (error) {\n            console.error('Görev silinirken hata oluştu:', error);\n            message.error('Görev silinirken bir hata oluştu. Lütfen tekrar deneyin.');\n        }\n    };\n\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h2>Görevleriniz:</h2>\n            {veri && veri.length > 0 ? (\n                veri.map((item, index) => (\n                    <div key={index} style={{ marginBottom: '10px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Button style={{ flex: 1, marginRight: '10px' }} block>\n                            {item.Task}\n                        </Button>\n                        <Popconfirm\n                            title=\"Bu görevi silmek istediğinizden emin misiniz?\"\n                            onConfirm={() => handleDelete(item)}\n                            okText=\"Evet\"\n                            cancelText=\"Hayır\"\n                        >\n                            <Button type=\"danger\">Sil</Button>\n                        </Popconfirm>\n                    </div>\n                ))\n            ) : (\n                <p>Yükleniyor...</p>\n            )}\n        </div>\n    );\n};\n\nexport default TaskAddList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}