{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/task.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'antd';\nimport axios from 'axios';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  userData\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login';\n  const getData = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}`);\n      setData(response.data.data);\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n    }\n  };\n  useEffect(() => {\n    getData(); // Fetch data\n  }, []);\n\n  // Kullanıcının görevlerini filtrele ve state'e set et\n  useEffect(() => {\n    const filteredUsers = data.filter(item => item.UserID === userData.UserID);\n    if (filteredUsers.length > 0) {\n      const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n      setFilteredTasks(tasks);\n    } else {\n      setFilteredTasks([]);\n    }\n  }, [data, userData.UserID]); // useEffect'in bağımlılıkları: data ve userData.UserID\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      htmlType: \"submit\",\n      type: \"primary\",\n      icon: /*#__PURE__*/_jsxDEV(FileAddOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }, this),\n      size: \"large\",\n      children: \"Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"G\\xF6revleriniz:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), filteredTasks && filteredTasks.length > 0 ? filteredTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginBottom: '10px'\n        },\n        block: true,\n        children: task\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this)) : \"Yükleniyor...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Task, \"hEQ/2fL1LKpGOGWJpgsrcO4GZos=\", false, function () {\n  return [useNavigate];\n});\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useEffect","Button","axios","FileAddOutlined","useNavigate","jsxDEV","_jsxDEV","Task","userData","_s","navigate","data","setData","filteredTasks","setFilteredTasks","apiUrl","getData","response","get","error","console","filteredUsers","filter","item","UserID","length","tasks","flatMap","user","split","map","task","trim","children","htmlType","type","icon","fileName","_jsxFileName","lineNumber","columnNumber","size","style","padding","index","marginBottom","block","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from 'antd';\nimport axios from 'axios';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\n\nconst Task = ({ userData }) => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [filteredTasks, setFilteredTasks] = useState([]);\n    const apiUrl = 'https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login';\n\n    const getData = async () => {\n        try {\n            const response = await axios.get(`${apiUrl}`);\n\n            setData(response.data.data);\n        } catch (error) {\n            console.error('Failed to fetch data', error);\n        }\n    };\n\n    useEffect(() => {\n        getData(); // Fetch data\n    }, []);\n\n    // Kullanıcının görevlerini filtrele ve state'e set et\n    useEffect(() => {\n        const filteredUsers = data.filter(item => item.UserID === userData.UserID);\n\n        if (filteredUsers.length > 0) {\n            const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n            setFilteredTasks(tasks);\n        } else {\n            setFilteredTasks([]);\n        }\n    }, [data, userData.UserID]); // useEffect'in bağımlılıkları: data ve userData.UserID\n\n    return (\n        <div >\n            <Button\n                htmlType=\"submit\"\n                type=\"primary\"\n                icon={<FileAddOutlined />}\n                size=\"large\"\n            >\n                Ekle\n            </Button>\n            <div style={{ padding: '20px' }}>\n                <h2>Görevleriniz:</h2>\n                {filteredTasks && filteredTasks.length > 0 ? (\n                    filteredTasks.map((task, index) => (\n                        <Button key={index} style={{ marginBottom: '10px' }} block>\n                            {task}\n                        </Button>\n                    ))\n                ) : (\n                    \"Yükleniyor...\"\n                )}\n            </div>\n            \n        </div>\n    );\n};\n\nexport default Task;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}