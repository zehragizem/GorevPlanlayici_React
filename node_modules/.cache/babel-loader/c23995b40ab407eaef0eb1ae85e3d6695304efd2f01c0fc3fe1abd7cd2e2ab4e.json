{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/drawer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Drawer, Button, Space, Avatar, ConfigProvider } from 'antd';\nimport { PoweroffOutlined, UserOutlined } from '@ant-design/icons';\nimport Task from '../components/task';\nimport DefaultPage from '../views/defaultPage';\nimport { useNavigate } from 'react-router-dom';\nimport TaskForm from './taskEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Draw = ({\n  userData,\n  itemsList\n}) => {\n  _s();\n  const [selectedItem, setSelectedItem] = useState(null);\n  const handleItemClick = item => {\n    setSelectedItem(item.key);\n  };\n  const navigate = useNavigate();\n  const onLogout = () => {\n    navigate(-1); // Çıkış yap veya bir önceki sayfaya geri dön\n  };\n\n  // Seçilen öğeye göre hangi bileşeni göstereceğimizi belirleyen fonksiyon\n  const renderComponent = () => {\n    switch (selectedItem) {\n      case 'task':\n        return /*#__PURE__*/_jsxDEV(Task, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this);\n      case 'taskEdit':\n        return /*#__PURE__*/_jsxDEV(TaskForm, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this);\n      case 'mail':\n        re;\n      default:\n        return /*#__PURE__*/_jsxDEV(DefaultPage, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    theme: {\n      token: {\n        colorBgElevated: \"#d11ba7\"\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          size: \"large\",\n          icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: '10px',\n            fontSize: '20px',\n            fontWeight: 'bold'\n          },\n          children: userData.User\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this),\n      placement: \"left\",\n      mask: false,\n      closable: false,\n      onClose: () => {} // Kapatma işlemi olmadığı için boş fonksiyon\n      ,\n      visible: true // Drawer'ı her zaman açık tut\n      ,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        style: {\n          width: '100%'\n        },\n        align: \"start\",\n        children: [itemsList.map(item => /*#__PURE__*/_jsxDEV(Button, {\n          type: \"text\",\n          icon: item.icon,\n          style: {\n            width: '100%',\n            textAlign: 'left',\n            fontSize: '16px'\n          },\n          onClick: () => handleItemClick(item),\n          children: item.label\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"text\",\n          icon: /*#__PURE__*/_jsxDEV(PoweroffOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this),\n          style: {\n            width: '100%',\n            textAlign: 'left',\n            fontSize: '16px'\n          },\n          onClick: onLogout,\n          children: \"\\xC7\\u0131k\\u0131\\u015F\"\n        }, \"logout\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '400px',\n        padding: '20px'\n      },\n      children: renderComponent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Draw, \"to3nJsHyWM6wEJAvfdjO+hhlyzk=\", false, function () {\n  return [useNavigate];\n});\n_c = Draw;\nexport default Draw;\nvar _c;\n$RefreshReg$(_c, \"Draw\");","map":{"version":3,"names":["React","useState","Drawer","Button","Space","Avatar","ConfigProvider","PoweroffOutlined","UserOutlined","Task","DefaultPage","useNavigate","TaskForm","jsxDEV","_jsxDEV","Draw","userData","itemsList","_s","selectedItem","setSelectedItem","handleItemClick","item","key","navigate","onLogout","renderComponent","fileName","_jsxFileName","lineNumber","columnNumber","re","theme","token","colorBgElevated","children","title","style","display","alignItems","size","icon","marginLeft","fontSize","fontWeight","User","placement","mask","closable","onClose","visible","direction","width","align","map","type","textAlign","onClick","label","padding","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/drawer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Drawer, Button, Space, Avatar, ConfigProvider } from 'antd';\nimport { PoweroffOutlined, UserOutlined } from '@ant-design/icons';\nimport Task from '../components/task';\nimport DefaultPage from '../views/defaultPage';\nimport { useNavigate } from 'react-router-dom';\n\nimport TaskForm from './taskEdit';\n\nconst Draw = ({ userData, itemsList }) => {\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  const handleItemClick = (item) => {\n    setSelectedItem(item.key);\n  };\n\n  const navigate = useNavigate();\n\n  const onLogout = () => {\n    navigate(-1); // Çıkış yap veya bir önceki sayfaya geri dön\n  };\n\n  // Seçilen öğeye göre hangi bileşeni göstereceğimizi belirleyen fonksiyon\n  const renderComponent = () => {\n    switch (selectedItem) {\n      case 'task':\n        return <Task userData={userData} />;\n      case 'taskEdit':\n        return <TaskForm userData={userData}></TaskForm>;\n      case 'mail':\n        re\n      default:\n        return <DefaultPage userData={userData} />;\n    }\n  };\n\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorBgElevated: \"#d11ba7\"\n        }\n      }}\n    >\n      <Drawer\n        title={\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <Avatar size=\"large\" icon={<UserOutlined />} />\n            <span style={{ marginLeft: '10px', fontSize: '20px', fontWeight: 'bold' }}>\n              {userData.User}\n            </span>\n          </div>\n        }\n        placement=\"left\"\n        mask={false}\n        closable={false}\n        onClose={() => {}} // Kapatma işlemi olmadığı için boş fonksiyon\n        visible={true} // Drawer'ı her zaman açık tut\n      >\n        <Space direction=\"vertical\" style={{ width: '100%' }} align='start'>\n          {itemsList.map((item) => (\n            <Button\n              key={item.key}\n              type=\"text\"\n              icon={item.icon}\n              style={{\n                width: '100%',\n                textAlign: 'left',\n                fontSize: '16px',\n              }}\n              onClick={() => handleItemClick(item)}\n            >\n              {item.label}\n            </Button>\n          ))}\n          <Button\n            key=\"logout\"\n            type=\"text\"\n            icon={<PoweroffOutlined />}\n            style={{ width: '100%', textAlign: 'left', fontSize: '16px' }}\n            onClick={onLogout}\n          >\n            Çıkış\n          </Button>\n        </Space>\n      </Drawer>\n      <div style={{ marginLeft: '400px', padding: '20px' }}>\n        {renderComponent()}\n      </div>\n    </ConfigProvider>\n  );\n};\n\nexport default Draw;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}