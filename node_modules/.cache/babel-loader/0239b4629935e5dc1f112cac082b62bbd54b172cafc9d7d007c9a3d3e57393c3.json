{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/taskEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  userData\n}) => {\n  _s();\n  const formRef = useRef(null);\n  const [name, setName] = useState('');\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login';\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      console.log('Fetched data:', response.data.data); // Debug log\n      const allData = response.data.data;\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      console.log('Filtered users:', filteredUsers); // Debug log\n      const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n      console.log('Tasks:', tasks); // Debug log\n      setFilteredTasks(tasks);\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n      message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n    }\n  };\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n  const handleChange = e => {\n    setName(e.target.value);\n  };\n  const handleSubmit = async () => {\n    const data = [[userData.Email, userData.Password, userData.User, name, userData.UserID]];\n    try {\n      const response = await axios.post(apiUrl, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Post response:', response.data); // Debug log\n\n      formRef.current.resetFields();\n      setName(''); // Reset the input field\n      message.success('Başarıyla Eklendi');\n      console.log('Görev başarıyla eklendi:', response.data);\n\n      // Re-fetch the tasks to update the list\n      await fetchDataAndFilterTasks();\n      console.log('Updated tasks after post:', filteredTasks); // Debug log\n    } catch (error) {\n      message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n      console.error('Görev eklenirken hata oluştu:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onFinish: handleSubmit,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"taskInput\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"g\\xF6rev\",\n          placeholder: \"G\\xF6rev Ekleyin\",\n          value: name,\n          onChange: handleChange,\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          size: \"large\",\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"G\\xF6revleriniz:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), filteredTasks && filteredTasks.length > 0 ? filteredTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginBottom: '10px'\n        },\n        block: true,\n        children: task\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this)) : \"Yükleniyor...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"OqQ3rHyfBjvLeu93UXNuhq3X8Iw=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Form","Input","Button","message","axios","jsxDEV","_jsxDEV","TaskForm","userData","_s","formRef","name","setName","filteredTasks","setFilteredTasks","apiUrl","fetchDataAndFilterTasks","response","get","console","log","data","allData","filteredUsers","filter","item","UserID","tasks","flatMap","user","Task","split","map","task","trim","error","handleChange","e","target","value","handleSubmit","Email","Password","User","post","headers","current","resetFields","success","children","onFinish","ref","Item","placeholder","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","htmlType","type","style","padding","length","index","marginBottom","block","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/taskEdit.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\n\nconst TaskForm = ({ userData }) => {\n    const formRef = useRef(null);\n    const [name, setName] = useState('');\n    const [filteredTasks, setFilteredTasks] = useState([]);\n    const apiUrl = 'https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login';\n\n    const fetchDataAndFilterTasks = async () => {\n        try {\n            const response = await axios.get(apiUrl);\n            console.log('Fetched data:', response.data.data); // Debug log\n            const allData = response.data.data;\n\n            const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n            console.log('Filtered users:', filteredUsers); // Debug log\n            const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n            console.log('Tasks:', tasks); // Debug log\n            setFilteredTasks(tasks);\n        } catch (error) {\n            console.error('Failed to fetch data', error);\n            message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n        }\n    };\n\n    useEffect(() => {\n        fetchDataAndFilterTasks();\n    }, []);\n\n    const handleChange = (e) => {\n        setName(e.target.value);\n    };\n\n    const handleSubmit = async () => {\n        const data = [\n            [\n                userData.Email,\n                userData.Password,\n                userData.User,\n                name,\n                userData.UserID\n            ]\n        ];\n\n        try {\n            const response = await axios.post(apiUrl, data, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            console.log('Post response:', response.data); // Debug log\n\n            formRef.current.resetFields();\n            setName('');  // Reset the input field\n            message.success('Başarıyla Eklendi');\n            console.log('Görev başarıyla eklendi:', response.data);\n\n            // Re-fetch the tasks to update the list\n            await fetchDataAndFilterTasks();\n            console.log('Updated tasks after post:', filteredTasks); // Debug log\n        } catch (error) {\n            message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n            console.error('Görev eklenirken hata oluştu:', error);\n        }\n    };\n\n    return (\n        <div>\n            <Form onFinish={handleSubmit} ref={formRef}>\n                <Form.Item name=\"taskInput\">\n                    <Input\n                        name=\"görev\"\n                        placeholder=\"Görev Ekleyin\"\n                        value={name}\n                        onChange={handleChange}\n                        size=\"large\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                        size=\"large\"\n                    >\n                        Ekle\n                    </Button>\n                </Form.Item>\n            </Form>\n\n            <div style={{ padding: '20px' }}>\n                <h2>Görevleriniz:</h2>\n                {filteredTasks && filteredTasks.length > 0 ? (\n                    filteredTasks.map((task, index) => (\n                        <Button key={index} style={{ marginBottom: '10px' }} block>\n                            {task}\n                        </Button>\n                    ))\n                ) : (\n                    \"Yükleniyor...\"\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}