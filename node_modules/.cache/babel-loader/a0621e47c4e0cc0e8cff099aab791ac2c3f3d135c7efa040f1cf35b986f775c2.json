{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/task.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  userData,\n  fi\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem002/google_sheets/iaBQTHRWCbIvMRlI?tabId=login';\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      setData(allData);\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      if (filteredUsers.length > 0) {\n        const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n        setFilteredTasks(tasks);\n      } else {\n        setFilteredTasks([]);\n      }\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n    }\n  };\n  useEffect(() => {\n    // İlk kez çalıştığında ve userData.UserID değiştiğinde veriyi alır\n    fetchDataAndFilterTasks();\n\n    // Her 10 saniyede bir veriyi güncellemek için setInterval kullanımı\n    const interval = setInterval(() => {\n      fetchDataAndFilterTasks();\n    }, 10000); // 10 saniyede bir yenileme yapılacak\n\n    // Component unmount olduğunda clearInterval ile interval'i temizle\n    return () => clearInterval(interval);\n  }, [userData.UserID]); // useEffect dependencies\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"G\\xF6revleriniz:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), filteredTasks.length > 0 ? filteredTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginBottom: '10px'\n      },\n      block: true,\n      children: task\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this)) : \"Yükleniyor...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Task, \"MKS5dTKIT8dtkay3pBKuH+RzTDs=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useEffect","Button","axios","jsxDEV","_jsxDEV","Task","userData","fi","_s","data","setData","filteredTasks","setFilteredTasks","apiUrl","fetchDataAndFilterTasks","response","get","allData","filteredUsers","filter","item","UserID","length","tasks","flatMap","user","split","map","task","trim","error","console","interval","setInterval","clearInterval","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","index","marginBottom","block","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from 'antd';\nimport axios from 'axios';\n\nconst Task = ({ userData,fi}) => {\n    const [data, setData] = useState([]);\n    const [filteredTasks, setFilteredTasks] = useState([]);\n    const apiUrl = 'https://v1.nocodeapi.com/gizem002/google_sheets/iaBQTHRWCbIvMRlI?tabId=login';\n\n    const fetchDataAndFilterTasks = async () => {\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n            setData(allData);\n\n            const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n\n            if (filteredUsers.length > 0) {\n                const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n                setFilteredTasks(tasks);\n            } else {\n                setFilteredTasks([]);\n            }\n\n        } catch (error) {\n            console.error('Failed to fetch data', error);\n        }\n    };\n\n    useEffect(() => {\n        // İlk kez çalıştığında ve userData.UserID değiştiğinde veriyi alır\n        fetchDataAndFilterTasks();\n\n        // Her 10 saniyede bir veriyi güncellemek için setInterval kullanımı\n        const interval = setInterval(() => {\n            fetchDataAndFilterTasks();\n        }, 10000); // 10 saniyede bir yenileme yapılacak\n\n        // Component unmount olduğunda clearInterval ile interval'i temizle\n        return () => clearInterval(interval);\n    }, [userData.UserID]); // useEffect dependencies\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h2>Görevleriniz:</h2>\n            {filteredTasks.length > 0 ? (\n                filteredTasks.map((task, index) => (\n                    <Button key={index} style={{ marginBottom: '10px' }} block>\n                        {task}\n                    </Button>\n                ))\n            ) : (\n                \"Yükleniyor...\"\n            )}\n        </div>\n    );\n};\n\nexport default Task;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,MAAM;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC,QAAQ;EAACC;AAAE,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMc,MAAM,GAAG,8EAA8E;EAE7F,MAAMC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACH,MAAM,CAAC;MACxC,MAAMI,OAAO,GAAGF,QAAQ,CAACN,IAAI,CAACA,IAAI;MAClCC,OAAO,CAACO,OAAO,CAAC;MAEhB,MAAMC,aAAa,GAAGD,OAAO,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKf,QAAQ,CAACe,MAAM,CAAC;MAE7E,IAAIH,aAAa,CAACI,MAAM,GAAG,CAAC,EAAE;QAC1B,MAAMC,KAAK,GAAGL,aAAa,CAACM,OAAO,CAACC,IAAI,IAAIA,IAAI,CAACpB,IAAI,CAACqB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1FjB,gBAAgB,CAACW,KAAK,CAAC;MAC3B,CAAC,MAAM;QACHX,gBAAgB,CAAC,EAAE,CAAC;MACxB;IAEJ,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED9B,SAAS,CAAC,MAAM;IACZ;IACAc,uBAAuB,CAAC,CAAC;;IAEzB;IACA,MAAMkB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BnB,uBAAuB,CAAC,CAAC;IAC7B,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEX;IACA,OAAO,MAAMoB,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAAC1B,QAAQ,CAACe,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEvB,oBACIjB,OAAA;IAAK+B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5BjC,OAAA;MAAAiC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrB9B,aAAa,CAACW,MAAM,GAAG,CAAC,GACrBX,aAAa,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEc,KAAK,kBAC1BtC,OAAA,CAACH,MAAM;MAAakC,KAAK,EAAE;QAAEQ,YAAY,EAAE;MAAO,CAAE;MAACC,KAAK;MAAAP,QAAA,EACrDT;IAAI,GADIc,KAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACX,CAAC,GAEF,eACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjC,EAAA,CApDIH,IAAI;AAAAwC,EAAA,GAAJxC,IAAI;AAsDV,eAAeA,IAAI;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}