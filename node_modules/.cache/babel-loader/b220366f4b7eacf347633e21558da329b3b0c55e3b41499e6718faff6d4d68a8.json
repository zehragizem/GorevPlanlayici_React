{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/drawer.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Drawer, Button, Space } from 'antd';\nimport { PoweroffOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Draw = props => {\n  _s();\n  const [placement, setPlacement] = React.useState('left'); // Default placement 'left'\n\n  const onChange = e => {\n    setPlacement(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      title: \"Basic Drawer\",\n      i: true,\n      placement: placement,\n      closable: false // Prevent closing the drawer\n      ,\n      mask: false // Disable clicking outside to close\n      ,\n      onClose: () => {} // No-op function to prevent closing on ESC key\n      ,\n      visible: true // Always keep the drawer open\n      ,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        style: {\n          width: '100%'\n        },\n        children: [props.itemsList.map(item => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            children: [item.icon, item.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(PoweroffOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this),\n          style: {\n            width: '50%',\n            marginTop: 'auto'\n          },\n          onClick: () => {},\n          children: \"\\xC7\\u0131k\\u0131\\u015F (Logout)\"\n        }, \"logout\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, placement, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Draw, \"ftlDoAB2Nj//IupgFlvIdqDzpRk=\");\n_c = Draw;\nexport default Draw;\nvar _c;\n$RefreshReg$(_c, \"Draw\");","map":{"version":3,"names":["React","Drawer","Button","Space","PoweroffOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","Draw","props","_s","placement","setPlacement","useState","onChange","e","target","value","children","title","i","closable","mask","onClose","visible","direction","style","width","itemsList","map","item","icon","label","fileName","_jsxFileName","lineNumber","columnNumber","key","type","marginTop","onClick","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/drawer.js"],"sourcesContent":["import React from 'react';\nimport { Drawer, Button, Space } from 'antd';\nimport { PoweroffOutlined } from '@ant-design/icons';\n\nconst Draw = (props) => {\n  const [placement, setPlacement] = React.useState('left'); // Default placement 'left'\n\n  const onChange = (e) => {\n    setPlacement(e.target.value);\n  };\n\n  return (\n    <>\n      <Drawer\n        title=\"Basic Drawer\"\n        i\n        placement={placement}\n        closable={false} // Prevent closing the drawer\n        mask={false} // Disable clicking outside to close\n        onClose={() => {}} // No-op function to prevent closing on ESC key\n        visible={true} // Always keep the drawer open\n        key={placement}\n      >\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          {props.itemsList.map((item) => (\n            <React.Fragment key={item.key}>\n              <Space>\n                {item.icon}\n                {item.label}\n              </Space>\n            </React.Fragment>\n          ))}\n\n          <Button\n            key=\"logout\"\n            type=\"primary\"\n            icon={<PoweroffOutlined />}\n            style={{ width: '50%', marginTop: 'auto' }}\n            onClick={() => {}}\n          >\n            Çıkış (Logout)\n          </Button>\n        </Space>\n      </Drawer>\n    </>\n  );\n};\n\nexport default Draw;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AAC5C,SAASC,gBAAgB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAE1D,MAAMC,QAAQ,GAAIC,CAAC,IAAK;IACtBH,YAAY,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACEb,OAAA,CAACL,MAAM;MACLmB,KAAK,EAAC,cAAc;MACpBC,CAAC;MACDT,SAAS,EAAEA,SAAU;MACrBU,QAAQ,EAAE,KAAM,CAAC;MAAA;MACjBC,IAAI,EAAE,KAAM,CAAC;MAAA;MACbC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE,CAAC;MAAA;MACnBC,OAAO,EAAE,IAAK,CAAC;MAAA;MAAAN,QAAA,eAGfb,OAAA,CAACH,KAAK;QAACuB,SAAS,EAAC,UAAU;QAACC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAT,QAAA,GAClDT,KAAK,CAACmB,SAAS,CAACC,GAAG,CAAEC,IAAI,iBACxBzB,OAAA,CAACN,KAAK,CAACO,QAAQ;UAAAY,QAAA,eACbb,OAAA,CAACH,KAAK;YAAAgB,QAAA,GACHY,IAAI,CAACC,IAAI,EACTD,IAAI,CAACE,KAAK;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC,GAJWN,IAAI,CAACO,GAAG;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKb,CACjB,CAAC,eAEF/B,OAAA,CAACJ,MAAM;UAELqC,IAAI,EAAC,SAAS;UACdP,IAAI,eAAE1B,OAAA,CAACF,gBAAgB;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAC3BV,KAAK,EAAE;YAAEC,KAAK,EAAE,KAAK;YAAEY,SAAS,EAAE;UAAO,CAAE;UAC3CC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;UAAAtB,QAAA,EACnB;QAED,GAPM,QAAQ;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAON,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC,GArBHzB,SAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsBR;EAAC,gBACT,CAAC;AAEP,CAAC;AAAC1B,EAAA,CA1CIF,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}