{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, Badge, message } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCalendar = ({\n  userData,\n  apiUrl\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchDataAndFilterTasks = async () => {\n      try {\n        const response = await axios.get(apiUrl);\n        const allData = response.data.data;\n        // Filter tasks based on UserID\n        const filteredTasks = allData.filter(item => item.UserID === userData.UserID);\n        // Transform tasks into required format\n        const tasksWithSubtasks = filteredTasks.map(task => ({\n          task: task.Task,\n          date: task.Date,\n          subtasks: task.SubTask ? task.SubTask.split(',').map(subtask => subtask.trim()) : [],\n          subdates: task.SubTaskDateRanges ? task.SubTaskDateRanges.split(',').map(subdate => subdate.trim()) : []\n        }));\n        console.log(t);\n        setTasks(tasksWithSubtasks);\n      } catch (error) {\n        console.error('Failed to fetch data', error);\n        message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n      }\n    };\n    fetchDataAndFilterTasks();\n  }, [apiUrl, userData.UserID]);\n  const dateCellRender = value => {\n    const dateString = value.format('YYYY-MM-DD');\n    // Filter tasks for the selected date\n    const tasksForDate = tasks.filter(task => task.date === dateString);\n    // Prepare subtasks for rendering\n    const subtasksForDate = tasksForDate.flatMap(task => task.subtasks.map((subtask, index) => ({\n      subtask,\n      subdate: task.subdates[index]\n    })));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"events\",\n        children: tasksForDate.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            status: \"processing\",\n            text: task.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, task.task, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"subevents\",\n        children: subtasksForDate.map((subtask, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            status: \"success\",\n            text: `${subtask.subtask} - ${subtask.subdate}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, `${subtask.subtask}-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      dateCellRender: dateCellRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCalendar, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskCalendar;\nexport default TaskCalendar;\nvar _c;\n$RefreshReg$(_c, \"TaskCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Badge","message","axios","jsxDEV","_jsxDEV","TaskCalendar","userData","apiUrl","_s","tasks","setTasks","fetchDataAndFilterTasks","response","get","allData","data","filteredTasks","filter","item","UserID","tasksWithSubtasks","map","task","Task","date","Date","subtasks","SubTask","split","subtask","trim","subdates","SubTaskDateRanges","subdate","console","log","t","error","dateCellRender","value","dateString","format","tasksForDate","subtasksForDate","flatMap","index","className","children","status","text","fileName","_jsxFileName","lineNumber","columnNumber","style","width","maxWidth","margin","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Calendar, Badge, message } from 'antd';\nimport axios from 'axios';\n\nconst TaskCalendar = ({ userData,apiUrl }) => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchDataAndFilterTasks = async () => {\n      try {\n        const response = await axios.get(apiUrl);\n        const allData = response.data.data;\n        // Filter tasks based on UserID\n        const filteredTasks = allData.filter(item => item.UserID === userData.UserID);\n        // Transform tasks into required format\n        const tasksWithSubtasks = filteredTasks.map(task => ({\n          task: task.Task,\n          date: task.Date,\n          subtasks: task.SubTask ? task.SubTask.split(',').map(subtask => subtask.trim()) : [],\n          subdates: task.SubTaskDateRanges ? task.SubTaskDateRanges.split(',').map(subdate => subdate.trim()) : []\n        }));\n        console.log(t)\n        setTasks(tasksWithSubtasks);\n      } catch (error) {\n        console.error('Failed to fetch data', error);\n        message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n      }\n    };\n\n    fetchDataAndFilterTasks();\n  }, [apiUrl, userData.UserID]);\n\n  const dateCellRender = (value) => {\n    const dateString = value.format('YYYY-MM-DD');\n    // Filter tasks for the selected date\n    const tasksForDate = tasks.filter(task => task.date === dateString);\n    // Prepare subtasks for rendering\n    const subtasksForDate = tasksForDate.flatMap(task =>\n      task.subtasks.map((subtask, index) => ({\n        subtask,\n        subdate: task.subdates[index]\n      }))\n    );\n\n    return (\n      <div className=\"events\">\n        <ul className=\"events\">\n          {tasksForDate.map(task => (\n            <li key={task.task}>\n              <Badge status=\"processing\" text={task.task} />\n            </li>\n          ))}\n        </ul>\n        <ul className=\"subevents\">\n          {subtasksForDate.map((subtask, index) => (\n            <li key={`${subtask.subtask}-${index}`}>\n              <Badge status=\"success\" text={`${subtask.subtask} - ${subtask.subdate}`} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ width: '100%', maxWidth: '800px', margin: '0 auto' }}>\n      <Calendar dateCellRender={dateCellRender} />\n    </div>\n  );\n};\n\nexport default TaskCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}