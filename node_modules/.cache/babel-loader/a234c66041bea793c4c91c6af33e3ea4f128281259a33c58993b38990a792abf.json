{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/login.js\";\nimport React from 'react';\nimport { Typography, Form, Input, Button, message, ConfigProvider } from 'antd';\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const handleLogin = values => {\n    message.success(\"Başarılı\");\n  };\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    theme: {\n      token: {\n        colorPrimary: '#5b10b5',\n        colorPrimaryHover: '#d11ba7',\n        colorText: \"#fff\",\n        colorBgContainer: rgb(108, 51, 179, 0.1)\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appBg\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"loginForm\",\n        onFinish: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Ho\\u015F Geldiniz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"myEmail\",\n          rules: [{\n            required: true,\n            type: \"email\",\n            message: \"Lütfen geçerli bir email adresi girin.\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Email\",\n            size: \"default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"myPassword\",\n          rules: [{\n            required: true,\n            message: \"Lütfen şifrenizi girin.\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            size: \"small\",\n            placeholder: \"\\u015Eifre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            block: true,\n            size: \"large\",\n            children: \"Giri\\u015F Yap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Typography","Form","Input","Button","message","ConfigProvider","jsxDEV","_jsxDEV","Login","handleLogin","values","success","theme","token","colorPrimary","colorPrimaryHover","colorText","colorBgContainer","rgb","children","className","onFinish","Title","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","Item","name","rules","required","type","placeholder","size","Password","htmlType","block","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/login.js"],"sourcesContent":["import React from 'react';\nimport { Typography, Form, Input, Button, message, ConfigProvider } from 'antd';\nimport \"./login.css\";\n\nconst Login = () => {\n\n    const handleLogin = (values) => {\n        message.success(\"Başarılı\");\n    }\n\n    return (\n        <ConfigProvider\n            theme={{\n                token: {\n                    colorPrimary: '#5b10b5',\n                    colorPrimaryHover: '#d11ba7',\n                    colorText: \"#fff\",\n                    colorBgContainer: rgb(108, 51, 179, 0.1),\n                },\n            }}\n        >\n            <div className=\"appBg\">\n                <Form className=\"loginForm\" onFinish={handleLogin}>\n                    <Typography.Title style={{ textAlign: 'center' }}>Hoş Geldiniz</Typography.Title>\n\n                    <Form.Item\n                        name=\"myEmail\"\n                        rules={[\n                            {\n                                required: true,\n                                type: \"email\",\n                                message: \"Lütfen geçerli bir email adresi girin.\"\n                            }\n                        ]}\n                    >\n                        <Input  placeholder=\"Email\" size='default' />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"myPassword\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Lütfen şifrenizi girin.\"\n                            }\n                        ]}\n                    >\n                        <Input.Password\n                            size='small'\n                            placeholder=\"Şifre\"\n                            \n                        />\n                    </Form.Item>\n\n                    <Form.Item style={{ textAlign: 'center' }}>\n                        <Button type='primary' htmlType='submit' block size='large'>Giriş Yap</Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        </ConfigProvider>\n    );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}