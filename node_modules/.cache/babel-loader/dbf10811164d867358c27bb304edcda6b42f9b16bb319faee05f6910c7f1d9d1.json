{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from 'react';\nimport { message } from 'antd';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nconst LoginData = () => {\n  _s();\n  const navigate = useNavigate();\n  const formRef = useRef(null);\n  const [data, setData] = useState([]);\n  const [userData, setUserData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const apiUrl = '';\n  const handleLogin = async values => {\n    const {\n      Email,\n      myPassword\n    } = values;\n\n    // Check if the user exists in the fetched data\n    const user = data.find(item => item.Email === Email && item.Password === myPassword);\n    if (user) {\n      message.success('Successful login');\n      setIsLoading(true);\n      setUserData(user);\n\n      // Simulated redirection (after 1.1 seconds)\n      setTimeout(() => {\n        setIsLoading(false);\n        navigate('/home', {\n          state: {\n            userData: user\n          }\n        }); // Pass userData to Home component\n        console.log(\"gizem\");\n        console.log(user.User);\n      }, 1100);\n      setTimeout(() => {\n        message.destroy();\n      }, 500);\n    } else {\n      message.error('Incorrect email or password');\n    }\n  };\n  const getData = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      setData(response.data.data);\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n    }\n  };\n  useEffect(() => {\n    getData(); // Fetch data\n  }, []);\n\n  // Return the necessary variables and functions for the Login component\n  return {\n    formRef,\n    handleLogin,\n    isLoading,\n    userData\n  };\n};\n_s(LoginData, \"8N67YZQdn4KBqXEqlm2lA4VUq4A=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginData;\nexport default LoginData;\nvar _c;\n$RefreshReg$(_c, \"LoginData\");","map":{"version":3,"names":["useRef","useState","useEffect","message","axios","useNavigate","LoginData","_s","navigate","formRef","data","setData","userData","setUserData","isLoading","setIsLoading","apiUrl","handleLogin","values","Email","myPassword","user","find","item","Password","success","setTimeout","state","console","log","User","destroy","error","getData","response","get","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/services/logindata.js"],"sourcesContent":["import { useRef, useState, useEffect } from 'react';\nimport { message } from 'antd';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst LoginData = () => {\n    const navigate = useNavigate();\n    const formRef = useRef(null);\n    const [data, setData] = useState([]);\n    const [userData, setUserData] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const apiUrl = '';\n\n    const handleLogin = async (values) => {\n        const { Email, myPassword } = values;\n\n        // Check if the user exists in the fetched data\n        const user = data.find(item => item.Email === Email && item.Password === myPassword);\n\n        if (user) {\n            message.success('Successful login');\n            setIsLoading(true);\n            setUserData(user);\n\n            // Simulated redirection (after 1.1 seconds)\n            setTimeout(() => {\n                setIsLoading(false);\n                navigate('/home', { state: { userData: user } }); // Pass userData to Home component\n                console.log(\"gizem\");\n                console.log(user.User);\n            }, 1100);\n            setTimeout(() => {\n                message.destroy();\n            }, 500);\n        } else {\n            message.error('Incorrect email or password');\n        }\n    };\n\n    const getData = async () => {\n        try {\n            const response = await axios.get(apiUrl);\n            setData(response.data.data);\n        } catch (error) {\n            console.error('Failed to fetch data', error);\n        }\n    };\n\n    useEffect(() => {\n        getData(); // Fetch data\n    }, []);\n\n    // Return the necessary variables and functions for the Login component\n    return { formRef, handleLogin, isLoading, userData };\n};\n\nexport default LoginData;\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,MAAM;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC9B,MAAMI,OAAO,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMe,MAAM,GAAG,EAAE;EAEjB,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;IAClC,MAAM;MAAEC,KAAK;MAAEC;IAAW,CAAC,GAAGF,MAAM;;IAEpC;IACA,MAAMG,IAAI,GAAGX,IAAI,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,KAAK,KAAKA,KAAK,IAAII,IAAI,CAACC,QAAQ,KAAKJ,UAAU,CAAC;IAEpF,IAAIC,IAAI,EAAE;MACNlB,OAAO,CAACsB,OAAO,CAAC,kBAAkB,CAAC;MACnCV,YAAY,CAAC,IAAI,CAAC;MAClBF,WAAW,CAACQ,IAAI,CAAC;;MAEjB;MACAK,UAAU,CAAC,MAAM;QACbX,YAAY,CAAC,KAAK,CAAC;QACnBP,QAAQ,CAAC,OAAO,EAAE;UAAEmB,KAAK,EAAE;YAAEf,QAAQ,EAAES;UAAK;QAAE,CAAC,CAAC,CAAC,CAAC;QAClDO,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACpBD,OAAO,CAACC,GAAG,CAACR,IAAI,CAACS,IAAI,CAAC;MAC1B,CAAC,EAAE,IAAI,CAAC;MACRJ,UAAU,CAAC,MAAM;QACbvB,OAAO,CAAC4B,OAAO,CAAC,CAAC;MACrB,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,MAAM;MACH5B,OAAO,CAAC6B,KAAK,CAAC,6BAA6B,CAAC;IAChD;EACJ,CAAC;EAED,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAACnB,MAAM,CAAC;MACxCL,OAAO,CAACuB,QAAQ,CAACxB,IAAI,CAACA,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED9B,SAAS,CAAC,MAAM;IACZ+B,OAAO,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,OAAO;IAAExB,OAAO;IAAEQ,WAAW;IAAEH,SAAS;IAAEF;EAAS,CAAC;AACxD,CAAC;AAACL,EAAA,CAjDID,SAAS;EAAA,QACMD,WAAW;AAAA;AAAA+B,EAAA,GAD1B9B,SAAS;AAmDf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}