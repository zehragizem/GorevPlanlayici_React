{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/taskEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, use } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport Task from '../components/task';\nimport TaskData from '../services/taskdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  userData\n}) => {\n  _s();\n  const {\n    refetchDataAndFilter\n  } = TaskData(userData);\n  const formRef = useRef(null);\n  const [name, setName] = useState('');\n  const apiUrl = 'https://v1.nocodeapi.com/gizem001/google_sheets/viewGTYYvtJXMfOr?tabId=login';\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refetchDataAndFilter();\n    }, 10000); // 10 saniyede bir yenileme yapılacak\n\n    return () => clearInterval(interval);\n  }, [userData.UserID]);\n  const handleChange = e => {\n    setName(e.target.value);\n  };\n  const handleSubmit = async () => {\n    const data = [[userData.Email, userData.Password, userData.User, name, userData.UserID]];\n    try {\n      const response = await axios.post(apiUrl, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      formRef.current.resetFields();\n      message.success(\"Başarıyla Eklendi\");\n      console.log('Görev başarıyla eklendi:', response.data);\n      refetchDataAndFilter(); // Yeni görev ekledikten sonra verileri yeniden getir ve filtrele\n    } catch (error) {\n      message.warning(\"Ekleme Yapılamadı\");\n      if (error.response) {\n        console.error('Görev eklenirken hata oluştu:', error.response.data);\n      } else {\n        console.error('Görev eklenirken hata oluştu:', error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onFinish: handleSubmit,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"taskInput\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"g\\xF6rev\",\n          placeholder: \"G\\xF6rev Ekleyin\",\n          value: name,\n          onChange: handleChange,\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(FileAddOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 31\n          }, this),\n          size: \"large\",\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Task, {\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"kxrR5Y54FokbG/w0jQ+POuCxP2g=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useRef","use","Form","Input","Button","message","FileAddOutlined","axios","Task","TaskData","jsxDEV","_jsxDEV","TaskForm","userData","_s","refetchDataAndFilter","formRef","name","setName","apiUrl","useEffect","interval","setInterval","clearInterval","UserID","handleChange","e","target","value","handleSubmit","data","Email","Password","User","response","post","headers","current","resetFields","success","console","log","error","warning","children","onFinish","ref","Item","placeholder","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","htmlType","type","icon","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/taskEdit.js"],"sourcesContent":["import React, { useState, useRef,use } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport Task from '../components/task';\nimport TaskData from '../services/taskdata';\n\nconst TaskForm = ({ userData }) => {\n    const { refetchDataAndFilter } = TaskData(userData);\n    const formRef = useRef(null);\n    const [name, setName] = useState('');\n    const apiUrl = 'https://v1.nocodeapi.com/gizem001/google_sheets/viewGTYYvtJXMfOr?tabId=login';\n    useEffect(() => {\n        const interval = setInterval(() => {\n            refetchDataAndFilter();\n        }, 10000); // 10 saniyede bir yenileme yapılacak\n\n        return () => clearInterval(interval);\n    }, [userData.UserID]);\n\n    const handleChange = (e) => {\n        setName(e.target.value);\n    };\n\n    const handleSubmit = async () => {\n        const data = [\n            [\n                userData.Email,\n                userData.Password,\n                userData.User,\n                name,\n                userData.UserID\n            ]\n        ];\n\n        try {\n            const response = await axios.post(\n                apiUrl,\n                data,\n                {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n            );\n\n            formRef.current.resetFields();\n            message.success(\"Başarıyla Eklendi\");\n            console.log('Görev başarıyla eklendi:', response.data);\n            \n            refetchDataAndFilter(); // Yeni görev ekledikten sonra verileri yeniden getir ve filtrele\n        } catch (error) {\n            message.warning(\"Ekleme Yapılamadı\");\n            if (error.response) {\n                console.error('Görev eklenirken hata oluştu:', error.response.data);\n            } else {\n                console.error('Görev eklenirken hata oluştu:', error.message);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <Form onFinish={handleSubmit} ref={formRef}>\n                <Form.Item\n                    name=\"taskInput\"\n                >\n                    <Input\n                        name='görev'\n                        placeholder=\"Görev Ekleyin\"\n                        value={name}\n                        onChange={handleChange}\n                        size=\"large\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                        icon={<FileAddOutlined />}\n                        size=\"large\"\n                    >\n                        Ekle\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Task userData={userData}></Task>\n            \n            \n        </div>\n    );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}