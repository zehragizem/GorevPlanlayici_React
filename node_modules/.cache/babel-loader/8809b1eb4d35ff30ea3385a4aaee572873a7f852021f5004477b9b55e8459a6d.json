{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/services/taskwrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TaskForm from \"../components/taskform\";\nimport TaskList from \"/Users/gizem/Desktop/reactproje/src/components/tasklist.js\";\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskWrapper = ({\n  userData\n}) => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem0011/google_sheets/KfjSbYcGqTRHHAaH?tabId=login';\n\n  // Function to fetch and filter tasks\n\n  // Fetch initial data on component mount\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n\n  // Update localStorage whenever todos state changes\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n  const addTask = todo => {\n    setTodos([...todos, todo]);\n  };\n  const deleteTask = task => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo !== task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Get Things Done!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask,\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), todos.map((todo, index) => /*#__PURE__*/_jsxDEV(TaskList, {\n      task: todo,\n      deleteTask: deleteTask\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskWrapper, \"JPZTns5sUK6f8sNf0ff2EvpSbn0=\");\n_c = TaskWrapper;\nexport default TaskWrapper;\nvar _c;\n$RefreshReg$(_c, \"TaskWrapper\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","Form","Input","Button","message","axios","jsxDEV","_jsxDEV","TaskWrapper","userData","_s","todos","setTodos","apiUrl","fetchDataAndFilterTasks","localStorage","setItem","JSON","stringify","addTask","todo","deleteTask","task","prevTodos","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/services/taskwrapper.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TaskForm from \"../components/taskform\";\nimport TaskList from \"/Users/gizem/Desktop/reactproje/src/components/tasklist.js\";\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\n\nconst TaskWrapper = ({ userData }) => {\n    const [todos, setTodos] = useState([]);\n\n    const apiUrl = 'https://v1.nocodeapi.com/gizem0011/google_sheets/KfjSbYcGqTRHHAaH?tabId=login';\n\n    // Function to fetch and filter tasks\n   \n\n    // Fetch initial data on component mount\n    useEffect(() => {\n        fetchDataAndFilterTasks();\n    }, []);\n\n    // Update localStorage whenever todos state changes\n    useEffect(() => {\n        localStorage.setItem('todos', JSON.stringify(todos));\n    }, [todos]);\n\n    const addTask = (todo) => {\n        setTodos([\n            ...todos,\n            todo,\n        ]);\n    };\n\n    const deleteTask = (task) => {\n        setTodos((prevTodos) => prevTodos.filter((todo) => todo !== task));\n    };\n\n    return (\n        <div>\n            <h1>Get Things Done!</h1>\n            <TaskForm addTask={addTask} userData={userData} />\n            {todos.map((todo, index) =>\n                <TaskList\n                    key={index}\n                    task={todo}\n                    deleteTask={deleteTask}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default TaskWrapper;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,4DAA4D;AACjF,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,OAAO,QAAQ,MAAM;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMgB,MAAM,GAAG,+EAA+E;;EAE9F;;EAGA;EACAf,SAAS,CAAC,MAAM;IACZgB,uBAAuB,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhB,SAAS,CAAC,MAAM;IACZiB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK,CAAC,CAAC;EACxD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMQ,OAAO,GAAIC,IAAI,IAAK;IACtBR,QAAQ,CAAC,CACL,GAAGD,KAAK,EACRS,IAAI,CACP,CAAC;EACN,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IACzBV,QAAQ,CAAEW,SAAS,IAAKA,SAAS,CAACC,MAAM,CAAEJ,IAAI,IAAKA,IAAI,KAAKE,IAAI,CAAC,CAAC;EACtE,CAAC;EAED,oBACIf,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtB,OAAA,CAACR,QAAQ;MAACoB,OAAO,EAAEA,OAAQ;MAACV,QAAQ,EAAEA;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjDlB,KAAK,CAACmB,GAAG,CAAC,CAACV,IAAI,EAAEW,KAAK,kBACnBxB,OAAA,CAACP,QAAQ;MAELsB,IAAI,EAAEF,IAAK;MACXC,UAAU,EAAEA;IAAW,GAFlBU,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGb,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACnB,EAAA,CA1CIF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}