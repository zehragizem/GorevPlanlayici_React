{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Badge, Calendar, message, Space } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = ['pink', 'purple', 'blue', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'geekblue', 'magenta', 'volcano', 'gold', 'lime'];\nconst TaskCalendar = ({\n  apiUrl,\n  userData\n}) => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      console.log('Tüm veriler:', allData); // Log all data to console\n\n      // Filter tasks based on UserID and transform tasks into a usable format\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasksWithDates = filteredUsers.map(user => ({\n        task: user.Task,\n        date: user.Date // renamed to lowercase 'date' for consistency\n      }));\n      setTodos(tasksWithDates);\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      message.error(`Veriler alınamadı. Lütfen daha sonra tekrar deneyin. Hata: ${error.message}`);\n    }\n  };\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n  useEffect(() => {\n    console.log('Filtrelenmiş görevler:', todos);\n  }, [todos]);\n\n  // Function to group tasks by date\n  const groupTasksByDate = () => {\n    const groupedTasks = {};\n    todos.forEach(task => {\n      const date = task.date; // Assuming date is in 'YYYY-MM-DD' format\n      if (!groupedTasks[date]) {\n        groupedTasks[date] = [];\n      }\n      groupedTasks[date].push(task);\n    });\n    return groupedTasks;\n  };\n\n  // Render tasks on calendar\n  const renderTasksOnCalendar = value => {\n    const groupedTasks = groupTasksByDate();\n    const date = value.format('YYYY-MM-DD');\n    const tasksForDate = groupedTasks[date] || [];\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksForDate.map((task, index) => /*#__PURE__*/_jsxDEV(Badge, {\n        color: colors[index],\n        text: task.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      dateCellRender: renderTasksOnCalendar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCalendar, \"JPZTns5sUK6f8sNf0ff2EvpSbn0=\");\n_c = TaskCalendar;\nexport default TaskCalendar;\nvar _c;\n$RefreshReg$(_c, \"TaskCalendar\");","map":{"version":3,"names":["React","useEffect","useState","Badge","Calendar","message","Space","axios","jsxDEV","_jsxDEV","colors","TaskCalendar","apiUrl","userData","_s","todos","setTodos","fetchDataAndFilterTasks","response","get","allData","data","console","log","filteredUsers","filter","item","UserID","tasksWithDates","map","user","task","Task","date","Date","error","groupTasksByDate","groupedTasks","forEach","push","renderTasksOnCalendar","value","format","tasksForDate","children","index","color","text","fileName","_jsxFileName","lineNumber","columnNumber","dateCellRender","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/calendar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Badge, Calendar, message, Space } from 'antd';\nimport axios from 'axios';\n\nconst colors = [\n  'pink','purple', 'blue','red', 'yellow', 'orange', 'cyan', 'green', 'blue',  'geekblue', 'magenta', 'volcano', 'gold', 'lime',\n];\n\nconst TaskCalendar = ({ apiUrl, userData }) => {\n  const [todos, setTodos] = useState([]);\n\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n\n      console.log('Tüm veriler:', allData); // Log all data to console\n\n      // Filter tasks based on UserID and transform tasks into a usable format\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasksWithDates = filteredUsers.map(user => ({\n        task: user.Task,\n        date: user.Date, // renamed to lowercase 'date' for consistency\n        \n      }));\n\n      setTodos(tasksWithDates);\n\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      message.error(`Veriler alınamadı. Lütfen daha sonra tekrar deneyin. Hata: ${error.message}`);\n    }\n  };\n\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n\n  useEffect(() => {\n    console.log('Filtrelenmiş görevler:', todos);\n  }, [todos]);\n\n  // Function to group tasks by date\n  const groupTasksByDate = () => {\n    const groupedTasks = {};\n    todos.forEach(task => {\n      const date = task.date; // Assuming date is in 'YYYY-MM-DD' format\n      if (!groupedTasks[date]) {\n        groupedTasks[date] = [];\n      }\n      groupedTasks[date].push(task);\n    });\n    return groupedTasks;\n  };\n\n  // Render tasks on calendar\n  const renderTasksOnCalendar = value => {\n    const groupedTasks = groupTasksByDate();\n\n    const date = value.format('YYYY-MM-DD');\n    const tasksForDate = groupedTasks[date] || [];\n    \n    return (\n      <ul>\n        {tasksForDate.map((task,index) => (\n          \n            <Badge color={colors[index]} text={task.task} />\n        \n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div>\n      <Calendar\n        dateCellRender={renderTasksOnCalendar}\n      />\n    </div>\n  );\n};\n\nexport default TaskCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}