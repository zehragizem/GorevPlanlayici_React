{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/taskEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  userData\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [userExists, setUserExists] = useState(true);\n  const handleChange = e => {\n    setName(e.target.value);\n  };\n  const handleSubmit = async () => {\n    try {\n      // Kullanıcıyı kontrol et\n      const userResponse = await axios.get('https://v1.nocodeapi.com/gizem12345/google_sheets/JheosOqLeKiZJKFm?tabId=login', {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const users = userResponse.data.data;\n      const userIndex = users.findIndex(user => user.UserID === userData.UserID);\n      if (userIndex === -1) {\n        setUserExists(false);\n        console.error('Kullanıcı mevcut değil!');\n        return;\n      }\n\n      // Kullanıcı mevcutsa görevi ekle\n      const userRow = users[userIndex];\n      const updatedTask = userRow.Task ? `${userRow.Task}, ${name}` : name; // Var olan göreve yeni görevi ekle\n      const rowId = userRow.row_id; // Mevcut satırın row_id'sini alın\n\n      await axios.put(`https://v1.nocodeapi.com/gizem12345/google_sheets/JheosOqLeKiZJKFm?tabId=login&row_id=${rowId}`, {\n        data: [userRow.Email, userRow.Password, userRow.User, updatedTask, userRow.UserID]\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Görev başarıyla güncellendi:', updatedTask);\n    } catch (error) {\n      if (error.response) {\n        console.error('Hata oluştu:', error.response.data);\n      } else {\n        console.error('Hata oluştu:', error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"taskInput\",\n        rules: [{\n          required: true,\n          message: 'Lütfen bir görev girin!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"g\\xF6rev\",\n          placeholder: \"G\\xF6rev Ekleyin\",\n          value: name,\n          onChange: handleChange,\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), !userExists && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Kullan\\u0131c\\u0131 mevcut de\\u011Fil!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(FileAddOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 31\n          }, this),\n          size: \"large\",\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"nmk4XaXzT/vbozB1FglNP1a2eCs=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","Form","Input","Button","FileAddOutlined","axios","jsxDEV","_jsxDEV","TaskForm","userData","_s","name","setName","userExists","setUserExists","handleChange","e","target","value","handleSubmit","userResponse","get","headers","users","data","userIndex","findIndex","user","UserID","console","error","userRow","updatedTask","Task","rowId","row_id","put","Email","Password","User","log","response","message","children","onFinish","Item","rules","required","placeholder","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","style","color","htmlType","type","icon","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/taskEdit.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nconst TaskForm = ({ userData }) => {\n    const [name, setName] = useState('');\n    const [userExists, setUserExists] = useState(true);\n\n    const handleChange = (e) => {\n        setName(e.target.value);\n    };\n\n    const handleSubmit = async () => {\n        try {\n            // Kullanıcıyı kontrol et\n            const userResponse = await axios.get(\n                'https://v1.nocodeapi.com/gizem12345/google_sheets/JheosOqLeKiZJKFm?tabId=login',\n                {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n            );\n            const users = userResponse.data.data;\n            const userIndex = users.findIndex(user => user.UserID === userData.UserID);\n\n            if (userIndex === -1) {\n                setUserExists(false);\n                console.error('Kullanıcı mevcut değil!');\n                return;\n            }\n\n            // Kullanıcı mevcutsa görevi ekle\n            const userRow = users[userIndex];\n            const updatedTask = userRow.Task ? `${userRow.Task}, ${name}` : name; // Var olan göreve yeni görevi ekle\n            const rowId = userRow.row_id; // Mevcut satırın row_id'sini alın\n\n            await axios.put(\n                `https://v1.nocodeapi.com/gizem12345/google_sheets/JheosOqLeKiZJKFm?tabId=login&row_id=${rowId}`,\n                {\n                    data: [\n                        userRow.Email,\n                        userRow.Password,\n                        userRow.User,\n                        updatedTask,\n                        userRow.UserID\n                    ]\n                },\n                {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n            );\n\n            console.log('Görev başarıyla güncellendi:', updatedTask);\n        } catch (error) {\n            if (error.response) {\n                console.error('Hata oluştu:', error.response.data);\n            } else {\n                console.error('Hata oluştu:', error.message);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <Form onFinish={handleSubmit}>\n                <Form.Item\n                    name=\"taskInput\"\n                    rules={[{ required: true, message: 'Lütfen bir görev girin!' }]}\n                >\n                    <Input\n                        name='görev'\n                        placeholder=\"Görev Ekleyin\"\n                        value={name}\n                        onChange={handleChange}\n                        size=\"large\"\n                    />\n                </Form.Item>\n                {!userExists && <div style={{ color: 'red' }}>Kullanıcı mevcut değil!</div>}\n                <Form.Item>\n                    <Button\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                        icon={<FileAddOutlined />}\n                        size=\"large\"\n                    >\n                        Ekle\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}