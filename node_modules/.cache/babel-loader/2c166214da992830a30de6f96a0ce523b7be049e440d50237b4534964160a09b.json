{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst TaskCalendar = ({\n  apiUrl,\n  userData\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasksWithDates = filteredUsers.flatMap(user => {\n        const startDate = moment(user.Date.split(' to ')[0], 'DD-MM-YYYY').toDate();\n        const endDate = moment(user.Date.split(' to ')[1], 'DD-MM-YYYY').toDate();\n        const taskEvent = {\n          id: user.TaskID,\n          title: user.Task,\n          start: startDate,\n          end: endDate\n        };\n        const subtaskEvents = user.SubTask ? user.SubTask.split(',').map((subtask, index) => ({\n          id: `${user.TaskID}-subtask-${index}`,\n          title: subtask.trim(),\n          start: moment(user.SubTaskDateRanges.split(',')[index].trim(), 'DD-MM-YYYY').toDate(),\n          end: moment(user.SubTaskDateRanges.split(',')[index].trim(), 'DD-MM-YYYY').toDate()\n        })) : [];\n        return [taskEvent, ...subtaskEvents];\n      });\n      setEvents(tasksWithDates);\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      // Handle error as needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '800px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        margin: '50px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCalendar, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = TaskCalendar;\nexport default TaskCalendar;\nvar _c;\n$RefreshReg$(_c, \"TaskCalendar\");","map":{"version":3,"names":["React","useState","useEffect","moment","Calendar","momentLocalizer","axios","jsxDEV","_jsxDEV","localizer","TaskCalendar","apiUrl","userData","_s","events","setEvents","fetchDataAndFilterTasks","response","get","allData","data","filteredUsers","filter","item","UserID","tasksWithDates","flatMap","user","startDate","Date","split","toDate","endDate","taskEvent","id","TaskID","title","Task","start","end","subtaskEvents","SubTask","map","subtask","index","trim","SubTaskDateRanges","error","console","style","height","children","startAccessor","endAccessor","margin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport axios from 'axios';\n\nconst localizer = momentLocalizer(moment);\n\nconst TaskCalendar = ({ apiUrl, userData }) => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasksWithDates = filteredUsers.flatMap(user => {\n        const startDate = moment(user.Date.split(' to ')[0], 'DD-MM-YYYY').toDate();\n        const endDate = moment(user.Date.split(' to ')[1], 'DD-MM-YYYY').toDate();\n        const taskEvent = {\n          id: user.TaskID,\n          title: user.Task,\n          start: startDate,\n          end: endDate,\n        };\n\n        const subtaskEvents = user.SubTask ? user.SubTask.split(',').map((subtask, index) => ({\n          id: `${user.TaskID}-subtask-${index}`,\n          title: subtask.trim(),\n          start: moment(user.SubTaskDateRanges.split(',')[index].trim(), 'DD-MM-YYYY').toDate(),\n          end: moment(user.SubTaskDateRanges.split(',')[index].trim(), 'DD-MM-YYYY').toDate(),\n        })) : [];\n\n        return [taskEvent, ...subtaskEvents];\n      });\n\n      setEvents(tasksWithDates);\n\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      // Handle error as needed\n    }\n  };\n\n  return (\n    <div style={{ height: '800px' }}>\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ margin: '50px' }}\n      />\n    </div>\n  );\n};\n\nexport default TaskCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}