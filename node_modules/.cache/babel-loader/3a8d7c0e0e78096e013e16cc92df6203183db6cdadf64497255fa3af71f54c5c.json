{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/taskAddList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskAddList = ({\n  data\n}) => {\n  _s();\n  const [veri, setVeri] = useState([]); // Initialize veri state with an empty array\n  const apiUrl = 'https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login';\n  const handleDelete = async task => {\n    console.log('Sil:', task);\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n\n      // Silinecek task'in kimliğini (row_id) al\n      const deletedData = allData.find(item => item.Task === task);\n      if (!deletedData) {\n        throw new Error('Görev bulunamadı.'); // Eğer görev bulunamazsa hata fırlat\n      }\n      const row_id = deletedData.row_id; // Görevin kimliği (row_id)\n\n      // Veritabanından silme işlemi için DELETE isteği gönder\n      await axios.delete(`https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login&row_id=${row_id}`);\n\n      // Başarılı bir şekilde silindiğinde bildirim göster\n      message.success('Görev başarıyla silindi.');\n\n      // Yeniden veri çekme ve state'i güncelleme\n      const updatedData = allData.filter(item => item.Task !== task); // Filter out the deleted task\n      setVeri(updatedData); // Update veri state with updated data\n    } catch (error) {\n      console.error('Görev silinirken hata oluştu:', error);\n      message.error('Görev silinirken bir hata oluştu. Lütfen tekrar deneyin.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"G\\xF6revleriniz:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), data && data.length > 0 ? data.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          flex: 1,\n          marginRight: '10px'\n        },\n        block: true,\n        children: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Y\\xFCkleniyor...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskAddList, \"brPDu2URk+y67Yx2F03N/jUtYRI=\");\n_c = TaskAddList;\nexport default TaskAddList;\nvar _c;\n$RefreshReg$(_c, \"TaskAddList\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","TaskAddList","data","_s","veri","setVeri","useState","apiUrl","handleDelete","task","console","log","response","axios","get","allData","deletedData","find","item","Task","Error","row_id","delete","message","success","updatedData","filter","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","marginBottom","display","justifyContent","alignItems","flex","marginRight","block","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/taskAddList.js"],"sourcesContent":["import React from 'react';\nimport { Button} from 'antd';\n\nconst TaskAddList = ({ data }) => {\n    const [veri, setVeri] = useState([]); // Initialize veri state with an empty array\n    const apiUrl = 'https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login';\n\n    \n    \n    const handleDelete = async (task) => {\n        console.log('Sil:', task);\n\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n\n            // Silinecek task'in kimliğini (row_id) al\n            const deletedData = allData.find(item => item.Task === task);\n            if (!deletedData) {\n                throw new Error('Görev bulunamadı.'); // Eğer görev bulunamazsa hata fırlat\n            }\n\n            const row_id = deletedData.row_id; // Görevin kimliği (row_id)\n\n            // Veritabanından silme işlemi için DELETE isteği gönder\n            await axios.delete(`https://v1.nocodeapi.com/gizem004/google_sheets/rmLuKVNiJbmqpjdA?tabId=login&row_id=${row_id}`);\n\n            // Başarılı bir şekilde silindiğinde bildirim göster\n            message.success('Görev başarıyla silindi.');\n\n            // Yeniden veri çekme ve state'i güncelleme\n            const updatedData = allData.filter(item => item.Task !== task); // Filter out the deleted task\n            setVeri(updatedData); // Update veri state with updated data\n        } catch (error) {\n            console.error('Görev silinirken hata oluştu:', error);\n            message.error('Görev silinirken bir hata oluştu. Lütfen tekrar deneyin.');\n        }\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h2>Görevleriniz:</h2>\n            {data && data.length > 0 ? (\n                data.map((task, index) => (\n                    <div key={index} style={{ marginBottom: '10px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Button style={{ flex: 1, marginRight: '10px' }} block>\n                            {task}\n                        </Button>\n                        \n                    </div>\n                ))\n            ) : (\n                <p>Yükleniyor...</p>\n            )}\n        </div>\n    );\n};\n\nexport default TaskAddList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAO,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAMC,MAAM,GAAG,8EAA8E;EAI7F,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;IACjCC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;IAEzB,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAACP,MAAM,CAAC;MACxC,MAAMQ,OAAO,GAAGH,QAAQ,CAACV,IAAI,CAACA,IAAI;;MAElC;MACA,MAAMc,WAAW,GAAGD,OAAO,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKV,IAAI,CAAC;MAC5D,IAAI,CAACO,WAAW,EAAE;QACd,MAAM,IAAII,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;MAC1C;MAEA,MAAMC,MAAM,GAAGL,WAAW,CAACK,MAAM,CAAC,CAAC;;MAEnC;MACA,MAAMR,KAAK,CAACS,MAAM,CAAC,uFAAuFD,MAAM,EAAE,CAAC;;MAEnH;MACAE,OAAO,CAACC,OAAO,CAAC,0BAA0B,CAAC;;MAE3C;MACA,MAAMC,WAAW,GAAGV,OAAO,CAACW,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKV,IAAI,CAAC,CAAC,CAAC;MAChEJ,OAAO,CAACoB,WAAW,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZjB,OAAO,CAACiB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDJ,OAAO,CAACI,KAAK,CAAC,0DAA0D,CAAC;IAC7E;EACJ,CAAC;EAED,oBACI3B,OAAA;IAAK4B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5B9B,OAAA;MAAA8B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBhC,IAAI,IAAIA,IAAI,CAACiC,MAAM,GAAG,CAAC,GACpBjC,IAAI,CAACkC,GAAG,CAAC,CAAC3B,IAAI,EAAE4B,KAAK,kBACjBrC,OAAA;MAAiB4B,KAAK,EAAE;QAAEU,YAAY,EAAE,MAAM;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAX,QAAA,eACrH9B,OAAA,CAACF,MAAM;QAAC8B,KAAK,EAAE;UAAEc,IAAI,EAAE,CAAC;UAAEC,WAAW,EAAE;QAAO,CAAE;QAACC,KAAK;QAAAd,QAAA,EACjDrB;MAAI;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC,GAHHG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACR,CAAC,gBAEFlC,OAAA;MAAA8B,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC/B,EAAA,CArDIF,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAuDjB,eAAeA,WAAW;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}