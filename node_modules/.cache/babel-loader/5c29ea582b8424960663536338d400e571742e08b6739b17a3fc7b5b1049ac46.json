{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/task.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Draw from '../common/drawer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Task = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const userData = state === null || state === void 0 ? void 0 : state.userData;\n  const tasks = userData.Task.split(',');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Draw, {\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '600px',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: task.trim()\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this) // Her görevi bir liste öğesi olarak göster, trim() ile boşlukları temizle\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(Task, \"FO3uhfHQFxifE5/pZVC1vAVIA9s=\", false, function () {\n  return [useLocation];\n});\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useLocation","Draw","jsxDEV","_jsxDEV","Fragment","_Fragment","Task","_s","state","userData","tasks","split","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","padding","map","task","index","trim","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/task.js"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Draw from '../common/drawer';\nconst Task = () => {\n  const { state } = useLocation();\n  const userData = state?.userData;\n  const tasks = userData.Task.split(',');\n\n  return (\n   <>\n   <Draw userData={userData}></Draw>\n   <div style={{ marginLeft: '600px', padding: '20px' }}>\n      <h2>Tasks:</h2>\n      <ul>\n        {tasks.map((task, index) => (\n          <li key={index}>{task.trim()}</li> // Her görevi bir liste öğesi olarak göster, trim() ile boşlukları temizle\n        ))}\n      </ul>\n    </div>\n   </>\n  );\n};\n\nexport default Task;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACpC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAM,CAAC,GAAGR,WAAW,CAAC,CAAC;EAC/B,MAAMS,QAAQ,GAAGD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,QAAQ;EAChC,MAAMC,KAAK,GAAGD,QAAQ,CAACH,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC;EAEtC,oBACCR,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACAT,OAAA,CAACF,IAAI;MAACQ,QAAQ,EAAEA;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjCb,OAAA;MAAKc,KAAK,EAAE;QAAEC,UAAU,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAP,QAAA,gBAClDT,OAAA;QAAAS,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfb,OAAA;QAAAS,QAAA,EACGF,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBnB,OAAA;UAAAS,QAAA,EAAiBS,IAAI,CAACE,IAAI,CAAC;QAAC,GAAnBD,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,CAAC;QACpC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACL,CAAC;AAEN,CAAC;AAACT,EAAA,CAlBID,IAAI;EAAA,QACUN,WAAW;AAAA;AAAAwB,EAAA,GADzBlB,IAAI;AAoBV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}