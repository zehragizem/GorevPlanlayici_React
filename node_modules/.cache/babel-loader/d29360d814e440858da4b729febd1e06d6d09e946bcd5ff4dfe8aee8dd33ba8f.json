{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, message, Popconfirm } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = ({\n  userData\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n      setTasks(tasks);\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n      message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"G\\xF6revleriniz:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), tasks && tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          flex: 1,\n          marginRight: '10px'\n        },\n        block: true,\n        children: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Y\\xFCkleniyor...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Tasks, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Button","message","Popconfirm","axios","jsxDEV","_jsxDEV","Tasks","userData","_s","tasks","setTasks","fetchData","response","get","apiUrl","allData","data","filteredUsers","filter","item","UserID","flatMap","user","Task","split","map","task","trim","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","marginBottom","display","justifyContent","alignItems","flex","marginRight","block","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/tasks.js"],"sourcesContent":["import React,{useState} from 'react';\nimport { Button, message, Popconfirm } from 'antd';\nimport axios from 'axios';\n\nconst Tasks = ({userData}) => {\n    const [tasks, setTasks] = useState([]);\n    const fetchData = async () => {\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n\n            const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n            const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n            setTasks(tasks);\n\n        } catch (error) {\n            console.error('Failed to fetch data', error);\n            message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n        }\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h2>Görevleriniz:</h2>\n            {tasks && tasks.length > 0 ? (\n                tasks.map((task, index) => (\n                    <div key={index} style={{ marginBottom: '10px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Button style={{ flex: 1, marginRight: '10px' }} block>\n                            {task}\n                        </Button>\n                        \n                    </div>\n                ))\n            ) : (\n                <p>Yükleniyor...</p>\n            )}\n        </div>\n    );\n};\n\nexport default Tasks;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,MAAM,EAAEC,OAAO,EAAEC,UAAU,QAAQ,MAAM;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACC,MAAM,CAAC;MACxC,MAAMC,OAAO,GAAGH,QAAQ,CAACI,IAAI,CAACA,IAAI;MAElC,MAAMC,aAAa,GAAGF,OAAO,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKb,QAAQ,CAACa,MAAM,CAAC;MAC7E,MAAMX,KAAK,GAAGQ,aAAa,CAACI,OAAO,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC1FjB,QAAQ,CAACD,KAAK,CAAC;IAEnB,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C3B,OAAO,CAAC2B,KAAK,CAAC,sDAAsD,CAAC;IACzE;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAKyB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5B3B,OAAA;MAAA2B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrB3B,KAAK,IAAIA,KAAK,CAAC4B,MAAM,GAAG,CAAC,GACtB5B,KAAK,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEY,KAAK,kBAClBjC,OAAA;MAAiByB,KAAK,EAAE;QAAES,YAAY,EAAE,MAAM;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAV,QAAA,eACrH3B,OAAA,CAACL,MAAM;QAAC8B,KAAK,EAAE;UAAEa,IAAI,EAAE,CAAC;UAAEC,WAAW,EAAE;QAAO,CAAE;QAACC,KAAK;QAAAb,QAAA,EACjDN;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC,GAHHE,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACR,CAAC,gBAEF/B,OAAA;MAAA2B,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAlCIF,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AAoCX,eAAeA,KAAK;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}