{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/drawer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Drawer, Button, Space, Avatar } from 'antd';\nimport { PoweroffOutlined, UserOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Draw = ({\n  userData,\n  itemsList\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedMenuItem, setSelectedMenuItem] = useState(null);\n  const onLogout = () => {\n    navigate(-1); // Önceki sayfaya git veya çıkış işlemi yap\n  };\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    title: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        align: 'start',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        size: \"large\",\n        icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '10px',\n          fontSize: '20px',\n          fontWeight: 'bold'\n        },\n        children: userData.User\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this),\n    placement: \"left\",\n    closable: false,\n    onClose: () => {} // Kapatma işlemi olmadığı için boş fonksiyon\n    ,\n    visible: true // Drawer'ı her zaman açık tut\n    ,\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      style: {\n        width: '100%'\n      },\n      align: \"start\",\n      children: [itemsList.map(item => /*#__PURE__*/_jsxDEV(Button, {\n        type: \"text\",\n        icon: item.icon,\n        style: {\n          width: '100%',\n          textAlign: 'left',\n          fontSize: '16px'\n        },\n        onClick: () => navigate(item.route),\n        children: item.label\n      }, item.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"text\",\n        icon: /*#__PURE__*/_jsxDEV(PoweroffOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this),\n        style: {\n          width: '100%',\n          textAlign: 'left',\n          fontSize: '16px'\n        },\n        onClick: onLogout,\n        children: \"\\xC7\\u0131k\\u0131\\u015F\"\n      }, \"logout\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Draw, \"15CrWVVGuzCr5O//2xfRdpYYgOw=\", false, function () {\n  return [useNavigate];\n});\n_c = Draw;\nexport default Draw;\nvar _c;\n$RefreshReg$(_c, \"Draw\");","map":{"version":3,"names":["React","useState","Drawer","Button","Space","Avatar","PoweroffOutlined","UserOutlined","useNavigate","jsxDEV","_jsxDEV","Draw","userData","itemsList","_s","navigate","selectedMenuItem","setSelectedMenuItem","onLogout","title","style","display","align","alignItems","children","size","icon","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","fontSize","fontWeight","User","placement","closable","onClose","visible","direction","width","map","item","type","textAlign","onClick","route","label","key","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/drawer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Drawer, Button, Space, Avatar } from 'antd';\nimport { PoweroffOutlined, UserOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\n\nconst Draw = ({ userData, itemsList }) => {\n  const navigate = useNavigate();\n  const [selectedMenuItem, setSelectedMenuItem] = useState(null);\n\n\n  const onLogout = () => {\n    navigate(-1); // Önceki sayfaya git veya çıkış işlemi yap\n  };\n\n  return (\n    <Drawer\n      title={\n        <div style={{ display: 'flex',align:'start',alignItems: 'center' }}>\n          <Avatar size=\"large\" icon={<UserOutlined />} />\n          <span style={{ marginLeft: '10px', fontSize: '20px', fontWeight: 'bold' }}>\n            {userData.User}\n          </span>\n        </div>\n      }\n      placement=\"left\"\n      closable={false}\n      onClose={() => {}} // Kapatma işlemi olmadığı için boş fonksiyon\n      visible={true} // Drawer'ı her zaman açık tut\n    >\n      <Space direction=\"vertical\"style={{ width: '100%' }} align='start'>\n        {itemsList.map((item) => (\n          <Button\n            key={item.key}\n            type=\"text\"\n            icon={item.icon}\n            style={{\n              width: '100%',\n              textAlign: 'left',\n              fontSize: '16px',\n              \n            }}\n            onClick={() => navigate(item.route)}\n          >\n            {item.label}\n          </Button>\n        ))}\n        <Button\n          key=\"logout\"\n          type=\"text\"\n          icon={<PoweroffOutlined />}\n          style={{ width: '100%', textAlign: 'left', fontSize: '16px' }}\n          onClick={onLogout}\n        >\n          Çıkış\n        </Button>\n      </Space>\n    </Drawer>\n  );\n};\n\nexport default Draw;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}