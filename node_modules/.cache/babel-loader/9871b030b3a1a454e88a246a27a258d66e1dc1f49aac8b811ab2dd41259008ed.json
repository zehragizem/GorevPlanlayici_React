{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/taskEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport Task from '../components/task';\nimport DefaultPage from '../views/defaultPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  userData\n}) => {\n  _s();\n  const formRef = useRef(null);\n  const [name, setName] = useState('');\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [state, setState] = useState(false);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem002/google_sheets/iaBQTHRWCbIvMRlI?tabId=login';\n\n  // Verilerin ilk yüklenmesi ve güncellenmesi için kullanılan fonksiyon\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n\n      // Kullanıcının verilerini filtrele\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n      setFilteredTasks(tasks);\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n      message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n    }\n  };\n  useEffect(() => {\n    fetchDataAndFilterTasks(); // İlk renderda ve userData değiştiğinde veriyi al\n  }, [userData]);\n\n  // Form içeriğinin değişimi\n  const handleChange = e => {\n    setName(e.target.value);\n  };\n\n  // Form submit işlemi\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post(apiUrl, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      formRef.current.resetFields(); // Formu temizle\n      message.success('Başarıyla Eklendi');\n      console.log('Görev başarıyla eklendi:', response.data);\n\n      // Yeni görev ekledikten sonra verileri tekrar getir ve filtrele\n      fetchDataAndFilterTasks();\n      setState(true); // Task bileşenini render etmek için state'i true yap\n    } catch (error) {\n      message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n      console.error('Görev eklenirken hata oluştu:', error);\n    }\n  };\n\n  // Task bileşenini render ettikten sonra state'i sıfırla\n  useEffect(() => {\n    if (state) {\n      setState(false);\n    }\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onFinish: handleSubmit,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"taskInput\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"g\\xF6rev\",\n          placeholder: \"G\\xF6rev Ekleyin\",\n          value: name,\n          onChange: handleChange,\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(FileAddOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 31\n          }, this),\n          size: \"large\",\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), state && /*#__PURE__*/_jsxDEV(Task, {\n      userData: userData,\n      filteredTasks: filteredTasks\n    }, Date.now(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"W6LRoscU/+NUdGa6cRSV5W6/brI=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Form","Input","Button","message","FileAddOutlined","axios","Task","DefaultPage","jsxDEV","_jsxDEV","TaskForm","userData","_s","formRef","name","setName","filteredTasks","setFilteredTasks","state","setState","apiUrl","fetchDataAndFilterTasks","response","get","allData","data","filteredUsers","filter","item","UserID","tasks","flatMap","user","split","map","task","trim","error","console","handleChange","e","target","value","handleSubmit","post","headers","current","resetFields","success","log","children","onFinish","ref","Item","placeholder","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","htmlType","type","icon","Date","now","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/taskEdit.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport Task from '../components/task';\nimport DefaultPage from '../views/defaultPage';\n\nconst TaskForm = ({ userData }) => {\n    const formRef = useRef(null);\n    const [name, setName] = useState('');\n    const [filteredTasks, setFilteredTasks] = useState([]);\n    const [state, setState] = useState(false);\n    const apiUrl = 'https://v1.nocodeapi.com/gizem002/google_sheets/iaBQTHRWCbIvMRlI?tabId=login';\n\n    // Verilerin ilk yüklenmesi ve güncellenmesi için kullanılan fonksiyon\n    const fetchDataAndFilterTasks = async () => {\n        try {\n            const response = await axios.get(apiUrl);\n            const allData = response.data.data;\n\n            // Kullanıcının verilerini filtrele\n            const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n            const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n            setFilteredTasks(tasks);\n        } catch (error) {\n            console.error('Failed to fetch data', error);\n            message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n        }\n    };\n\n    useEffect(() => {\n        fetchDataAndFilterTasks(); // İlk renderda ve userData değiştiğinde veriyi al\n    }, [userData]);\n\n    // Form içeriğinin değişimi\n    const handleChange = (e) => {\n        setName(e.target.value);\n    };\n\n    // Form submit işlemi\n    const handleSubmit = async () => {\n        \n\n        try {\n            const response = await axios.post(apiUrl, data, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            formRef.current.resetFields(); // Formu temizle\n            message.success('Başarıyla Eklendi');\n            console.log('Görev başarıyla eklendi:', response.data);\n\n            // Yeni görev ekledikten sonra verileri tekrar getir ve filtrele\n            fetchDataAndFilterTasks();\n            setState(true); // Task bileşenini render etmek için state'i true yap\n        } catch (error) {\n            message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n            console.error('Görev eklenirken hata oluştu:', error);\n        }\n    };\n\n    // Task bileşenini render ettikten sonra state'i sıfırla\n    useEffect(() => {\n        if (state) {\n            setState(false);\n        }\n    }, [state]);\n\n    return (\n        <div>\n            <Form onFinish={handleSubmit} ref={formRef}>\n                <Form.Item name=\"taskInput\">\n                    <Input\n                        name=\"görev\"\n                        placeholder=\"Görev Ekleyin\"\n                        value={name}\n                        onChange={handleChange}\n                        size=\"large\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                        icon={<FileAddOutlined />}\n                        size=\"large\"\n                    >\n                        Ekle\n                    </Button>\n                </Form.Item>\n            </Form>\n            \n            {state && <Task key={Date.now()} userData={userData} filteredTasks={filteredTasks} />}\n            {/* state true ise Task bileşenini render et */}\n        </div>\n    );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}