{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/services/taskwrapper.js\",\n  _s = $RefreshSig$();\n//Burada fonksiyonlar olacak.\nimport React, { useState, useEffect } from \"react\";\nimport TaskForm from \"../components/taskform\";\nimport { Form, Input, Button, message } from 'antd';\nimport TaskList from \"/Users/gizem/Desktop/reactproje/src/components/tasklist.js\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskWrapper = ({\n  userData\n}) => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [subTask, setSubTask] = useState([]);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem0011/google_sheets/KfjSbYcGqTRHHAaH?tabId=login';\n\n  // Function to fetch and filter tasks\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n      setTodos(tasks); // Set initial data\n      setSubTask(subtasks);\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n      message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n    }\n  };\n\n  // Fetch initial data on component mount\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n  const addTask = todo => {\n    setTodos([...todos, todo]);\n  };\n  const deleteTask = task => setTodos(prevTodos => prevTodos.filter(todo => todo !== task));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Get Things Done !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask,\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), todos.map((todo, index) => /*#__PURE__*/_jsxDEV(TaskList, {\n      subTask: subTask,\n      task: todo,\n      deleteTask: deleteTask\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskWrapper, \"OIeTl8oKjdui81tMlfSHq2RqFBE=\");\n_c = TaskWrapper;\nexport default TaskWrapper;\nvar _c;\n$RefreshReg$(_c, \"TaskWrapper\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","Form","Input","Button","message","TaskList","axios","jsxDEV","_jsxDEV","TaskWrapper","userData","_s","todos","setTodos","subTask","setSubTask","apiUrl","fetchDataAndFilterTasks","response","get","allData","data","filteredUsers","filter","item","UserID","tasks","flatMap","user","Task","split","map","task","trim","subtasks","error","console","addTask","todo","deleteTask","prevTodos","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/services/taskwrapper.js"],"sourcesContent":["//Burada fonksiyonlar olacak.\nimport React, { useState, useEffect } from \"react\";\nimport TaskForm from \"../components/taskform\";\nimport { Form, Input, Button, message } from 'antd';\nimport TaskList from \"/Users/gizem/Desktop/reactproje/src/components/tasklist.js\";\nimport axios from 'axios';\nconst TaskWrapper = ({ userData }) => {\n  const [todos, setTodos] = useState([]);\n  const [subTask, setSubTask] = useState([]);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem0011/google_sheets/KfjSbYcGqTRHHAaH?tabId=login';\n\n  // Function to fetch and filter tasks\n  const fetchDataAndFilterTasks = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      const allData = response.data.data;\n\n      const filteredUsers = allData.filter(item => item.UserID === userData.UserID);\n      const tasks = filteredUsers.flatMap(user => user.Task.split(',').map(task => task.trim()));\n      \n      setTodos(tasks); // Set initial data\n      setSubTask(subtasks);\n\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n      message.error('Veriler alınamadı. Lütfen daha sonra tekrar deneyin.');\n    }\n  };\n\n  // Fetch initial data on component mount\n  useEffect(() => {\n    fetchDataAndFilterTasks();\n  }, []);\n  const addTask = (todo) => {\n    setTodos([\n      ...todos, todo,\n    ]);\n  }\n  const deleteTask = (task) => setTodos((prevTodos) => prevTodos.filter((todo) => todo !== task));\n\n  return (\n    <div>\n      <h1>Get Things Done !</h1>\n      <TaskForm addTask={addTask} userData={userData} />\n      {todos.map((todo, index) =>\n\n        <TaskList\n          key={index}\n          subTask={subTask}\n          task={todo}\n          deleteTask={deleteTask}\n        />\n      )}\n\n    </div>\n  );\n\n}\nexport default TaskWrapper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}