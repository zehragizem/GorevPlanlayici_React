{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/common/taskEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport Task from '../components/task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  userData\n}) => {\n  _s();\n  const formRef = useRef(null);\n  const [taskAdded, setTaskAdded] = useState(false);\n  const [name, setName] = useState('');\n  const [tasks, setTasks] = useState([]); // Görevlerin tutulduğu state\n  const apiUrl = 'https://v1.nocodeapi.com/gizem123/google_sheets/FQBdMrMXBbkmUYfs?tabId=login';\n  const handleChange = e => {\n    setName(e.target.value);\n  };\n  const handleSubmit = async () => {\n    const data = [[userData.Email, userData.Password, userData.User, name, userData.UserID]];\n    try {\n      const response = await axios.post(apiUrl, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      message.success(\"Başarıyla Eklendi\");\n      console.log('Görev başarıyla eklendi:', response.data);\n      setTimeout(() => {\n        setTaskAdded(true);\n      }, 500);\n\n      // Görevler yeniden yüklenecek\n      loadData(); // Yeniden veri çekme fonksiyonunu çağır\n    } catch (error) {\n      if (error.response) {\n        // Sunucudan gelen yanıt var\n        console.error('Görev eklenirken hata oluştu:', error.response.data);\n      } else {\n        // Yanıt yok, istek hiç yapılmadı ya da yapılamadı\n        console.error('Görev eklenirken hata oluştu:', error.message);\n      }\n    }\n  };\n\n  // Görevleri API'den yeniden çekme\n  const loadData = async () => {\n    try {\n      const response = await axios.get(apiUrl);\n      setTasks(response.data.data); // Görevleri state'e kaydet\n    } catch (error) {\n      console.error('Failed to fetch data', error);\n    }\n  };\n  useEffect(() => {\n    loadData(); // Component yüklendiğinde ve güncellendiğinde görevleri çek\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onFinish: handleSubmit,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"taskInput\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"g\\xF6rev\",\n          placeholder: \"G\\xF6rev Ekleyin\",\n          value: name,\n          onChange: handleChange,\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(FileAddOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 31\n          }, this),\n          size: \"large\",\n          onClick: taskAdded => formRef.current.resetFields(),\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Task, {\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"j8f6jy8VKutbucSYOFZs/kECE8U=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Form","Input","Button","message","FileAddOutlined","axios","Task","jsxDEV","_jsxDEV","TaskForm","userData","_s","formRef","taskAdded","setTaskAdded","name","setName","tasks","setTasks","apiUrl","handleChange","e","target","value","handleSubmit","data","Email","Password","User","UserID","response","post","headers","success","console","log","setTimeout","loadData","error","get","children","onFinish","ref","Item","placeholder","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","htmlType","type","icon","onClick","current","resetFields","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/common/taskEdit.js"],"sourcesContent":["import React, { useState, useEffect,useRef} from 'react';\nimport { Form, Input, Button,message } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport Task from '../components/task';\n\nconst TaskForm = ({ userData }) => {\n    const formRef = useRef(null);\n    const [taskAdded, setTaskAdded] = useState(false);\n    const [name, setName] = useState('');\n    const [tasks, setTasks] = useState([]); // Görevlerin tutulduğu state\n    const apiUrl='https://v1.nocodeapi.com/gizem123/google_sheets/FQBdMrMXBbkmUYfs?tabId=login';\n\n    const handleChange = (e) => {\n        setName(e.target.value);\n    };\n\n    const handleSubmit = async () => {\n        const data = [\n            [\n                userData.Email,\n                userData.Password,\n                userData.User,\n                name,\n                userData.UserID\n            ]\n        ];\n\n        try {\n            const response = await axios.post(\n                apiUrl,\n                data,\n                {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n            );\n            message.success(\"Başarıyla Eklendi\")\n            \n            console.log('Görev başarıyla eklendi:', response.data);\n            setTimeout(() => {\n                setTaskAdded(true);\n            }, 500);\n            \n\n            // Görevler yeniden yüklenecek\n            loadData(); // Yeniden veri çekme fonksiyonunu çağır\n        } catch (error) {\n            if (error.response) {\n                // Sunucudan gelen yanıt var\n                console.error('Görev eklenirken hata oluştu:', error.response.data);\n            } else {\n                // Yanıt yok, istek hiç yapılmadı ya da yapılamadı\n                console.error('Görev eklenirken hata oluştu:', error.message);\n            }\n        }\n    };\n\n    // Görevleri API'den yeniden çekme\n    const loadData = async () => {\n        try {\n            const response = await axios.get(apiUrl);\n            setTasks(response.data.data); // Görevleri state'e kaydet\n        } catch (error) {\n            console.error('Failed to fetch data', error);\n        }\n    };\n\n    useEffect(() => {\n        loadData(); // Component yüklendiğinde ve güncellendiğinde görevleri çek\n    }, []);\n\n    return (\n        <div>\n            <Form onFinish={handleSubmit} ref={formRef}>\n                <Form.Item\n                    name=\"taskInput\"\n                    \n                >\n                    <Input\n                        name='görev'\n                        placeholder=\"Görev Ekleyin\"\n                        value={name}\n                        onChange={handleChange}\n                        size=\"large\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                        icon={<FileAddOutlined />}\n                        size=\"large\"\n                        onClick={(taskAdded)=>formRef.current.resetFields()}\n                        \n                    >\n                        Ekle\n                    </Button>\n                </Form.Item>\n            </Form>\n       \n            <Task userData={userData} ></Task>\n        </div>\n    );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}