{"ast":null,"code":"var _jsxFileName = \"/Users/gizem/Desktop/reactproje/src/components/taskform.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Form, Input, Button, message, Space } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  addTask,\n  userData\n}) => {\n  _s();\n  const [value, setValue] = useState();\n  const formRef = useRef(null);\n  const apiUrl = 'https://v1.nocodeapi.com/gizem0011/google_sheets/KfjSbYcGqTRHHAaH?tabId=login';\n  const handleSubmit = async () => {\n    if (value) {\n      try {\n        const taskData = [[userData.Email, userData.Password, userData.User, value, userData.UserID]];\n\n        // Post new task data\n        await axios.post(apiUrl, taskData);\n        formRef.current.resetFields();\n        message.success('Görev başarıyla eklendi.');\n        addTask(value);\n      } catch (error) {\n        message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n        console.error('Görev eklenirken hata oluştu:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: handleSubmit,\n    ref: formRef,\n    layout: \"inline\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"taskInput\",\n      style: {\n        flex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        name: \"g\\xF6rev\",\n        placeholder: \"G\\xF6rev Ekleyin\",\n        size: \"large\",\n        value: value,\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(FileAddOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this),\n          htmlType: \"submit\",\n          type: \"primary\",\n          size: \"large\",\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"tfH/hDfMGJpXHeF8gJR7UT1w6cs=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useRef","Form","Input","Button","message","Space","FileAddOutlined","axios","jsxDEV","_jsxDEV","TaskForm","addTask","userData","_s","value","setValue","formRef","apiUrl","handleSubmit","taskData","Email","Password","User","UserID","post","current","resetFields","success","error","console","onFinish","ref","layout","children","Item","name","style","flex","placeholder","size","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","icon","htmlType","type","_c","$RefreshReg$"],"sources":["/Users/gizem/Desktop/reactproje/src/components/taskform.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Form, Input, Button, message,Space } from 'antd';\nimport { FileAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nconst TaskForm = ({ addTask, userData }) => {\n    const [value, setValue] = useState();\n    const formRef = useRef(null);\n    const apiUrl = 'https://v1.nocodeapi.com/gizem0011/google_sheets/KfjSbYcGqTRHHAaH?tabId=login';\n    const handleSubmit = async () => {\n        if (value) {\n            try {\n                const taskData = [\n                    [\n                        userData.Email,\n                        userData.Password,\n                        userData.User,\n                        value,\n                        userData.UserID\n                    ]\n                ];\n\n                // Post new task data\n                await axios.post(apiUrl, taskData);\n                formRef.current.resetFields();\n                message.success('Görev başarıyla eklendi.');\n                addTask(value);\n\n            }\n            catch (error) {\n                message.error('Görev eklenirken bir hata oluştu. Lütfen tekrar deneyin.');\n                console.error('Görev eklenirken hata oluştu:', error);\n            }\n\n        }\n    }\n    return (\n        <Form onFinish={handleSubmit} ref={formRef} layout=\"inline\">\n            <Form.Item name=\"taskInput\" style={{ flex: 1 }}>\n                <Input\n                    name=\"görev\"\n                    placeholder=\"Görev Ekleyin\"\n                    size=\"large\"\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                />\n            </Form.Item>\n            <Form.Item>\n            <Space>\n          <Button\n            icon={<FileAddOutlined />}\n            htmlType=\"submit\"\n            type=\"primary\"\n            size=\"large\"\n          >\n            Ekle\n          </Button>\n          \n        </Space>\n            </Form.Item>\n\n\n        </Form>\n    );\n\n\n}\nexport default TaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}